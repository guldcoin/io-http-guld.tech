{
  "paths": [
    "index.md",
    [
      "cli",
      [
        "cli/guld-cli.md",
        "cli/guld-env-cli.md",
        "cli/guld-fs-cli.md",
        "cli/guld-fs-foreach-cli.md",
        "cli/guld-fs-str-replace-cli.md",
        "cli/guld-git-cli.md",
        "cli/guld-git-config-cli.md",
        "cli/guld-git-host-cli.md",
        "cli/guld-git-path-cli.md",
        "cli/guld-git-remote-cli.md",
        "cli/guld-keys-cli.md",
        "cli/guld-ledger-cli.md",
        "cli/guld-mail-cli.md",
        "cli/guld-market-cli.md",
        "cli/guld-pass-cli.md",
        "cli/guld-random-cli.md",
        "cli/guld-sdk-cli.md",
        "cli/guld-user-cli.md"
      ]
    ],
    [
      "lib",
      [
        "lib/flexfs.md",
        "lib/gpg-conf.md",
        "lib/guld-app.md",
        "lib/guld-cli-run.md",
        "lib/guld-docs.md",
        "lib/guld-env.md",
        "lib/guld-fs-foreach.md",
        "lib/guld-fs-str-replace.md",
        "lib/guld-fs.md",
        "lib/guld-git-config-ini.md",
        "lib/guld-git-config.md",
        "lib/guld-git-host-bitbucket.md",
        "lib/guld-git-host-github.md",
        "lib/guld-git-host-gitlab.md",
        "lib/guld-git-host.md",
        "lib/guld-git-path.md",
        "lib/guld-git-remote.md",
        "lib/guld-git.md",
        "lib/guld-ledger-grant.md",
        "lib/guld-ledger-register.md",
        "lib/guld-ledger-transfer.md",
        "lib/guld-mail.md",
        "lib/guld-pass.md",
        "lib/guld-random.md",
        "lib/guld-sdk.md",
        "lib/guld-spawn.md",
        "lib/guld-user.md",
        "lib/keyring-gpg.md",
        "lib/keyring-interface.md",
        "lib/keyring-pgp.md",
        "lib/keyvaluedb.md",
        "lib/ledger-types.md"
      ]
    ],
    [
      "papers",
      [
        "papers/guld-dapp-architecture.md",
        "papers/guld-whitepaper.md",
        "papers/guldFS_Specification.md",
        "papers/guldOS_Specification.md",
        "papers/guld_email.md",
        "papers/guld_ledger.md",
        "papers/guld_name_service.md"
      ]
    ]
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "# Guld Tech\n\n### Papers\n\nRead more about guld technology from a theoretic and architectural level.\n\n + [Whitepaper](/papers/guld-whitepaper.html)\n + [GuldFS Decentralized Filesystem Specificatoin](/papers/guldFS_Specification.html)\n + [GuldFS Operating System](/papers/guldOS_Specification.html)\n + [Guld Name Service](/papers/guld-name-service.html)\n\n### CLI\n\nGuld node operators and power users will want to start by installing [guld-cli](/cli/guld-cli.html). This master guld command should install all others you need to interact with the network. Some important sub-commands installed are:\n\n + [guld-cli](/cli/guld-cli.html)\n + [guld-env-cli](/cli/guld-env-cli.html)\n + [guld-fs-cli](/cli/guld-fs-cli.html)\n + [guld-git-cli](/cli/guld-git-cli.html)\n + [guld-keys-cli](/cli/guld-keys-cli.html)\n + [guld-pass-cli](/cli/guld-pass-cli.html)\n + [guld-mail-cli](/cli/guld-mail-cli.html)\n + [guld-random-cli](/cli/guld-random-cli.html)\n\n### lib\n\nAll unique [guld-cli](/cli/guld-cli.html) functionality is also available in libraries. Developers will import these, while the CLI versions of each package serve as great lib usage examples.\n\n + [flexfs](/cli/guld.html)\n + [guld-env](/cli/guld-env.html)\n + [guld-fs](/cli/guld-fs.html)\n + [guld-git](/cli/guld-git.html)\n + [guld-keys](/cli/guld-keys.html)\n + [guld-pass](/cli/guld-pass.html)\n + [guld-mail](/cli/guld-mail.html)\n + [guld-random](/cli/guld-random.html)\n\n",
      "html": "<h1>Guld Tech</h1>\n<h3>Papers</h3>\n<p>Read more about guld technology from a theoretic and architectural level.</p>\n<ul>\n<li><a href=\"/papers/guld-whitepaper.html\">Whitepaper</a></li>\n<li><a href=\"/papers/guldFS_Specification.html\">GuldFS Decentralized Filesystem Specificatoin</a></li>\n<li><a href=\"/papers/guldOS_Specification.html\">GuldFS Operating System</a></li>\n<li><a href=\"/papers/guld-name-service.html\">Guld Name Service</a></li>\n</ul>\n<h3>CLI</h3>\n<p>Guld node operators and power users will want to start by installing <a href=\"/cli/guld-cli.html\">guld-cli</a>. This master guld command should install all others you need to interact with the network. Some important sub-commands installed are:</p>\n<ul>\n<li><a href=\"/cli/guld-cli.html\">guld-cli</a></li>\n<li><a href=\"/cli/guld-env-cli.html\">guld-env-cli</a></li>\n<li><a href=\"/cli/guld-fs-cli.html\">guld-fs-cli</a></li>\n<li><a href=\"/cli/guld-git-cli.html\">guld-git-cli</a></li>\n<li><a href=\"/cli/guld-keys-cli.html\">guld-keys-cli</a></li>\n<li><a href=\"/cli/guld-pass-cli.html\">guld-pass-cli</a></li>\n<li><a href=\"/cli/guld-mail-cli.html\">guld-mail-cli</a></li>\n<li><a href=\"/cli/guld-random-cli.html\">guld-random-cli</a></li>\n</ul>\n<h3>lib</h3>\n<p>All unique <a href=\"/cli/guld-cli.html\">guld-cli</a> functionality is also available in libraries. Developers will import these, while the CLI versions of each package serve as great lib usage examples.</p>\n<ul>\n<li><a href=\"/cli/guld.html\">flexfs</a></li>\n<li><a href=\"/cli/guld-env.html\">guld-env</a></li>\n<li><a href=\"/cli/guld-fs.html\">guld-fs</a></li>\n<li><a href=\"/cli/guld-git.html\">guld-git</a></li>\n<li><a href=\"/cli/guld-keys.html\">guld-keys</a></li>\n<li><a href=\"/cli/guld-pass.html\">guld-pass</a></li>\n<li><a href=\"/cli/guld-mail.html\">guld-mail</a></li>\n<li><a href=\"/cli/guld-random.html\">guld-random</a></li>\n</ul>\n",
      "id": 0
    },
    {
      "path": "cli/guld-cli.md",
      "url": "cli/guld-cli.html",
      "content": "# guld-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-cli.svg)](https://www.npmjs.com/package/guld-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli?type=dev)\n\nGuld Decentralized Internet Toolkit.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld --help\n\n  Usage: guld [options] [command]\n\n  Guld Decentralized Internet Toolkit.\n\n  Options:\n\n    -V, --version     output the version number\n    -u --user <name>  The user name to run as.\n    -h, --help        output usage information\n\n  Commands:\n\n    user              Guld user management tools. Get, list, and check users.\n    env               Guld environment detection.\n    git               Git tools and commands.\n    mail              Guld mail is a signed, encrypted, and witnessed email system.\n    keys              Cryptographic key storage and usage.\n    pass              Encrypted password management comaptible with passwordstore.org.\n    ledger            Guld ledger manager.\n    random            Cryptographically secure random number (& string) generator.\n    fs                Guld filesystem tools.\n    sdk               Guld Software Developer Kit.\n    help [cmd]        display help for [cmd]\n\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-cli\"><img src=\"https://img.shields.io/npm/v/guld-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld Decentralized Internet Toolkit.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld --help\n\n  Usage: guld [options] [command]\n\n  Guld Decentralized Internet Toolkit.\n\n  Options:\n\n    -V, --version     output the version number\n    -u --user &lt;name&gt;  The user name to run as.\n    -h, --help        output usage information\n\n  Commands:\n\n    user              Guld user management tools. Get, list, and check users.\n    env               Guld environment detection.\n    git               Git tools and commands.\n    mail              Guld mail is a signed, encrypted, and witnessed email system.\n    keys              Cryptographic key storage and usage.\n    pass              Encrypted password management comaptible with passwordstore.org.\n    ledger            Guld ledger manager.\n    random            Cryptographically secure random number (&amp; string) generator.\n    fs                Guld filesystem tools.\n    sdk               Guld Software Developer Kit.\n    help [cmd]        display help for [cmd]\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 1
    },
    {
      "path": "cli/guld-env-cli.md",
      "url": "cli/guld-env-cli.html",
      "content": "# guld-env-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-env-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-env-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-env-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-env-cli.svg)](https://www.npmjs.com/package/guld-env-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-env-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-env-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli?type=dev)\n\nGuld environment detection CLI.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-env-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-env --help\n\n  Usage: guld-env [options] [command]\n\n  Guld environment detection CLI.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n  Commands:\n\n    js             Get the JS execution environment (always node from CLI)\n    os             Get the operating system.\n    dist           Get the distro, if linux OS.\n    release        Get the distro release, if linux OS.\n    all            Get the os, distro, release, and JS environment. In that order.\n\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-env-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-env-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-env-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-env-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-env-cli\"><img src=\"https://img.shields.io/npm/v/guld-env-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-env-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-env-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld environment detection CLI.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-env-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-env --help\n\n  Usage: guld-env [options] [command]\n\n  Guld environment detection CLI.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n  Commands:\n\n    js             Get the JS execution environment (always node from CLI)\n    os             Get the operating system.\n    dist           Get the distro, if linux OS.\n    release        Get the distro release, if linux OS.\n    all            Get the os, distro, release, and JS environment. In that order.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 2
    },
    {
      "path": "cli/guld-fs-cli.md",
      "url": "cli/guld-fs-cli.html",
      "content": "# guld-fs-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-fs-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-fs-cli.svg)](https://www.npmjs.com/package/guld-fs-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli?type=dev)\n\nGuld file system abstraction CLI.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-fs-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-fs --help\n\n  Usage: guld-fs [options] [command]\n\n  Guld file system abstraction CLI.\n\n  Options:\n\n    -V, --version                           output the version number\n    -u --user <name>                        The user name to run as.\n    -r --recursive                          Perform command recursively.\n    -h, --help                              output usage information\n\n  Commands:\n\n    foreach <command>                       Run command for each file and/or directory in the given directory.\n    str-replace <path> <old-str> <new-str>  Replace old-string with new-string for all files in path.\n\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-fs-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-fs-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-fs-cli\"><img src=\"https://img.shields.io/npm/v/guld-fs-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld file system abstraction CLI.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-fs-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-fs --help\n\n  Usage: guld-fs [options] [command]\n\n  Guld file system abstraction CLI.\n\n  Options:\n\n    -V, --version                           output the version number\n    -u --user &lt;name&gt;                        The user name to run as.\n    -r --recursive                          Perform command recursively.\n    -h, --help                              output usage information\n\n  Commands:\n\n    foreach &lt;command&gt;                       Run command for each file and/or directory in the given directory.\n    str-replace &lt;path&gt; &lt;old-str&gt; &lt;new-str&gt;  Replace old-string with new-string for all files in path.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 3
    },
    {
      "path": "cli/guld-fs-foreach-cli.md",
      "url": "cli/guld-fs-foreach-cli.html",
      "content": "# guld-fs-foreach-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-fs-foreach-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-fs-foreach-cli.svg)](https://www.npmjs.com/package/guld-fs-foreach-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-foreach-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-foreach-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli?type=dev)\n\nRun command for each file and/or directory in the given directory.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-fs-foreach-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-fs-foreach --help\n\n  Usage: guld-fs-foreach <dir> <command> [flags...]\n\n  Run command for each file and/or directory in the given directory.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-fs-foreach-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-fs-foreach-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-fs-foreach-cli\"><img src=\"https://img.shields.io/npm/v/guld-fs-foreach-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-foreach-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-foreach-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Run command for each file and/or directory in the given directory.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-fs-foreach-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-fs-foreach --help\n\n  Usage: guld-fs-foreach &lt;dir&gt; &lt;command&gt; [flags...]\n\n  Run command for each file and/or directory in the given directory.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 4
    },
    {
      "path": "cli/guld-fs-str-replace-cli.md",
      "url": "cli/guld-fs-str-replace-cli.html",
      "content": "# guld-fs-str-replace-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-fs-str-replace-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-fs-str-replace-cli.svg)](https://www.npmjs.com/package/guld-fs-str-replace-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-str-replace-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-str-replace-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli?type=dev)\n\nReplace old-string with new-string for all files in path.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-fs-str-replace-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-fs-str-replace --help\n\n  Usage: guld-fs-str-replace <path> <old-str> <new-str> [flags...]\n\n  Replace old-string with new-string for all files in path.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-fs-str-replace-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-fs-str-replace-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-fs-str-replace-cli\"><img src=\"https://img.shields.io/npm/v/guld-fs-str-replace-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-str-replace-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-str-replace-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Replace old-string with new-string for all files in path.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-fs-str-replace-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-fs-str-replace --help\n\n  Usage: guld-fs-str-replace &lt;path&gt; &lt;old-str&gt; &lt;new-str&gt; [flags...]\n\n  Replace old-string with new-string for all files in path.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 5
    },
    {
      "path": "cli/guld-git-cli.md",
      "url": "cli/guld-git-cli.html",
      "content": "# guld-git-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-git-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-cli.svg)](https://www.npmjs.com/package/guld-git-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli?type=dev)\n\nGuld standardized CLI for git.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-git-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-git --help\n\n  Usage: guld-git [options] [command]\n\n  Guld standardized CLI for git.\n\n  Options:\n\n    -V, --version                   output the version number\n    -C --cwd <dir>                  Set current working directory before running.\n    -h, --help                      output usage information\n\n  Commands:\n\n    path                            Blocktree path resolution tools.\n    config                          Configuration manager for git config files.\n    host                            Configuration manager for git hosts.\n    remote                          Manage git remotes the guld way.\n    add [options] [file]            Add files to the git working directory.\n    init                            Create an empty Git repository or reinitialize an existing one.\n    clone [url] [directory]         Clone a repository into a new directory.\n    remove|delete [options] <file>  Remove files from the git working directory.\n    log [options] [fromRef]         List commits from the given ref backwards.\n    status [file]                   Get the status of a file in the working directory.\n    commit [message]                Stores the current contents of the index in a new commit along with a log message from the user describing the changes.\n    fetch [remote] [branch]         Download objects and refs from another repository.\n    push [remote] [branch]          Update remote refs along with associated objects.\n    pull [remote] [branch]          Fetch from and integrate with another repository or a local branch.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-git-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-cli\"><img src=\"https://img.shields.io/npm/v/guld-git-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld standardized CLI for git.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-git-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-git --help\n\n  Usage: guld-git [options] [command]\n\n  Guld standardized CLI for git.\n\n  Options:\n\n    -V, --version                   output the version number\n    -C --cwd &lt;dir&gt;                  Set current working directory before running.\n    -h, --help                      output usage information\n\n  Commands:\n\n    path                            Blocktree path resolution tools.\n    config                          Configuration manager for git config files.\n    host                            Configuration manager for git hosts.\n    remote                          Manage git remotes the guld way.\n    add [options] [file]            Add files to the git working directory.\n    init                            Create an empty Git repository or reinitialize an existing one.\n    clone [url] [directory]         Clone a repository into a new directory.\n    remove|delete [options] &lt;file&gt;  Remove files from the git working directory.\n    log [options] [fromRef]         List commits from the given ref backwards.\n    status [file]                   Get the status of a file in the working directory.\n    commit [message]                Stores the current contents of the index in a new commit along with a log message from the user describing the changes.\n    fetch [remote] [branch]         Download objects and refs from another repository.\n    push [remote] [branch]          Update remote refs along with associated objects.\n    pull [remote] [branch]          Fetch from and integrate with another repository or a local branch.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 6
    },
    {
      "path": "cli/guld-git-config-cli.md",
      "url": "cli/guld-git-config-cli.html",
      "content": "# guld-git-config-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-git-config-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-config-cli.svg)](https://www.npmjs.com/package/guld-git-config-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-config-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-config-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli?type=dev)\n\nGuld configuration helper manages git config files.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-git-config-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-git-config --help\n\n  Usage: guld-git-config <key> [value] Get or set a config key depending on pressence of value argument.\n\n  Guld configuration helper manages git config files.\n\n  Options:\n\n    -V, --version             output the version number\n    --global                  Use the global config file\n    --local                   Use the local config file\n    --system                  Use the system config file.\n    -f, --file <config-file>  Use the given config file.\n    -h, --help                output usage information\n\n  Commands:\n\n    name                      Get the guld name of the current user.\n    get <key>                 Get a config by key.\n    set <key> <value>         Set a config key to the given value.\n    unset                     Unset a config key.\n    list                      List all config key/value pairs.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-config-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-git-config-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-config-cli\"><img src=\"https://img.shields.io/npm/v/guld-git-config-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-config-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-config-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld configuration helper manages git config files.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-git-config-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-git-config --help\n\n  Usage: guld-git-config &lt;key&gt; [value] Get or set a config key depending on pressence of value argument.\n\n  Guld configuration helper manages git config files.\n\n  Options:\n\n    -V, --version             output the version number\n    --global                  Use the global config file\n    --local                   Use the local config file\n    --system                  Use the system config file.\n    -f, --file &lt;config-file&gt;  Use the given config file.\n    -h, --help                output usage information\n\n  Commands:\n\n    name                      Get the guld name of the current user.\n    get &lt;key&gt;                 Get a config by key.\n    set &lt;key&gt; &lt;value&gt;         Set a config key to the given value.\n    unset                     Unset a config key.\n    list                      List all config key/value pairs.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 7
    },
    {
      "path": "cli/guld-git-host-cli.md",
      "url": "cli/guld-git-host-cli.html",
      "content": "# guld-git-host-cli\n\nConfiguration manager for git hosts.\n\n### Install\n\n```\nnpm i -g guld-git-host-cli\n```\n\n### Usage\n\n##### CLI\n\n```\n  Usage: guld-git-host [options] [command]\n\n  Configuration manager for git hosts.\n\n  Options:\n\n    -V, --version                 output the version number\n    -u --user <name>              The user name to run as.\n    -h, --help                    output usage information\n\n  Commands:\n\n    init [hosts...]               Initialize your git hosting account(s).\n    repo-create [options] [name]  Create a repository. Defaults to the current working dir.\n    repo-delete [name]            Delete a repository. Defaults to the current working dir.\n    add-ssh [key]                 Add an ssh key to your git hosting account(s). Default: ~/.ssh/id_rsa.pub\n```\n",
      "html": "<h1>guld-git-host-cli</h1>\n<p>Configuration manager for git hosts.</p>\n<h3>Install</h3>\n<pre><code>npm i -g guld-git-host-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code>  Usage: guld-git-host [options] [command]\n\n  Configuration manager for git hosts.\n\n  Options:\n\n    -V, --version                 output the version number\n    -u --user &lt;name&gt;              The user name to run as.\n    -h, --help                    output usage information\n\n  Commands:\n\n    init [hosts...]               Initialize your git hosting account(s).\n    repo-create [options] [name]  Create a repository. Defaults to the current working dir.\n    repo-delete [name]            Delete a repository. Defaults to the current working dir.\n    add-ssh [key]                 Add an ssh key to your git hosting account(s). Default: ~/.ssh/id_rsa.pub\n</code></pre>\n",
      "id": 8
    },
    {
      "path": "cli/guld-git-path-cli.md",
      "url": "cli/guld-git-path-cli.html",
      "content": "# guld-git-path-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-path-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-path-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-git-path-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-path-cli.svg)](https://www.npmjs.com/package/guld-git-path-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-path-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-path-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli?type=dev)\n\nGuld tool for getting the git directory of a path, or converting local paths into git-friendly repo names.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-git-path-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-git-path --help\n\n  Usage: guld-git-path [options] [command]\n\n  Guld tool for getting the git directory of a path, or converting local paths into git-friendly repo names.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n  Commands:\n\n    escape [path]  Convert a local path into an escaped blocktree path, like used in git repo names.\n    dir [path]     Guld tool for getting the git directory of a path.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-path-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-path-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-path-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-git-path-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-path-cli\"><img src=\"https://img.shields.io/npm/v/guld-git-path-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-path-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-path-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld tool for getting the git directory of a path, or converting local paths into git-friendly repo names.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-git-path-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-git-path --help\n\n  Usage: guld-git-path [options] [command]\n\n  Guld tool for getting the git directory of a path, or converting local paths into git-friendly repo names.\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n  Commands:\n\n    escape [path]  Convert a local path into an escaped blocktree path, like used in git repo names.\n    dir [path]     Guld tool for getting the git directory of a path.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 9
    },
    {
      "path": "cli/guld-git-remote-cli.md",
      "url": "cli/guld-git-remote-cli.html",
      "content": "# guld-git-remote-cli\n\nManage git remotes the guld way.\n\n### Example Output\n\n### Install\n\n```\nnpm i -g guld-git-remote-cli\n```\n\n### Usage\n\n##### CLI\n\n```\n  Usage: guld-git-remote [options] [command]\n\n  Manage git remotes the guld way.\n\n  Options:\n\n    -V, --version         output the version number\n    -h, --help            output usage information\n\n  Commands:\n\n    remove|delete [name]  Remove one or all remotes from the given or current directory.\n    add [options] [slug]  Add one or all user branch remotes to the current directory.\n```\n\n",
      "html": "<h1>guld-git-remote-cli</h1>\n<p>Manage git remotes the guld way.</p>\n<h3>Example Output</h3>\n<h3>Install</h3>\n<pre><code>npm i -g guld-git-remote-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code>  Usage: guld-git-remote [options] [command]\n\n  Manage git remotes the guld way.\n\n  Options:\n\n    -V, --version         output the version number\n    -h, --help            output usage information\n\n  Commands:\n\n    remove|delete [name]  Remove one or all remotes from the given or current directory.\n    add [options] [slug]  Add one or all user branch remotes to the current directory.\n</code></pre>\n",
      "id": 10
    },
    {
      "path": "cli/guld-keys-cli.md",
      "url": "cli/guld-keys-cli.html",
      "content": "# guld-keys-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-keys-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-keys-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-keys-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-keys-cli.svg)](https://www.npmjs.com/package/guld-keys-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-keys-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-keys-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-keys-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-keys-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli?type=dev)\n\nCryptographic key storage and usage.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-keys-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-keys --help\n\n  Usage: guld-keys [options] [command]\n\n  Cryptographic key storage and usage.\n\n  Options:\n\n    -V, --version       output the version number\n    -s, --secret        Perform action on secret keys.\n    -a, --ascii         ASCII armor any output.\n    -f, --file          The file to read as input.\n    -o, --out           The file to write as output.\n    -h, --help          output usage information\n\n  Commands:\n\n    init [fingerprint]  Intialize a PGP key with the guld network.\n    list                List PGP keys as fingerprint UID pairs. (\"*\" for all)\n    import              Import a PGP key.\n    export              Export a PGP key.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-keys-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-keys-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-keys-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-keys-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-keys-cli\"><img src=\"https://img.shields.io/npm/v/guld-keys-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-keys-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-keys-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-keys-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-keys-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-keys-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Cryptographic key storage and usage.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-keys-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-keys --help\n\n  Usage: guld-keys [options] [command]\n\n  Cryptographic key storage and usage.\n\n  Options:\n\n    -V, --version       output the version number\n    -s, --secret        Perform action on secret keys.\n    -a, --ascii         ASCII armor any output.\n    -f, --file          The file to read as input.\n    -o, --out           The file to write as output.\n    -h, --help          output usage information\n\n  Commands:\n\n    init [fingerprint]  Intialize a PGP key with the guld network.\n    list                List PGP keys as fingerprint UID pairs. (&quot;*&quot; for all)\n    import              Import a PGP key.\n    export              Export a PGP key.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 11
    },
    {
      "path": "cli/guld-ledger-cli.md",
      "url": "cli/guld-ledger-cli.html",
      "content": "# guld-ledger-cli\n\nGuld ledger commands.\n\n### Install\n\n```\nnpm i -g guld-ledger-cli\n```\n\n### Usage\n\n\n##### CLI\n\n```\n",
      "html": "<h1>guld-ledger-cli</h1>\n<p>Guld ledger commands.</p>\n<h3>Install</h3>\n<pre><code>npm i -g guld-ledger-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code></code></pre>\n",
      "id": 12
    },
    {
      "path": "cli/guld-mail-cli.md",
      "url": "cli/guld-mail-cli.html",
      "content": "# guld-mail-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-mail-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-mail-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-mail-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-mail-cli.svg)](https://www.npmjs.com/package/guld-mail-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-mail-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-mail-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli?type=dev)\n\nGuld mail is a signed, encrypted, and witnessed email system.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-mail-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-mail --help\n\n  Usage: guld-mail [options] [command]\n\n  Guld mail is a signed, encrypted, and witnessed email system.\n\n  Options:\n\n    -V, --version    output the version number\n    -h, --help       output usage information\n\n  Commands:\n\n    address [name]   Get the guld address of the current or specified user.\n    parse <address>  Parse an email address, returning exit code 1 if invalid.\n    init [address]   Setup your public email address for the guld network.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-mail-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-mail-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-mail-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-mail-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-mail-cli\"><img src=\"https://img.shields.io/npm/v/guld-mail-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-mail-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-mail-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld mail is a signed, encrypted, and witnessed email system.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-mail-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-mail --help\n\n  Usage: guld-mail [options] [command]\n\n  Guld mail is a signed, encrypted, and witnessed email system.\n\n  Options:\n\n    -V, --version    output the version number\n    -h, --help       output usage information\n\n  Commands:\n\n    address [name]   Get the guld address of the current or specified user.\n    parse &lt;address&gt;  Parse an email address, returning exit code 1 if invalid.\n    init [address]   Setup your public email address for the guld network.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 13
    },
    {
      "path": "cli/guld-market-cli.md",
      "url": "cli/guld-market-cli.html",
      "content": "# guld-git-cli\n\nGuld standardized CLI for git.\n\n### Example Output\n\n### Install\n\n```\nnpm i -g guld-git-cli\n```\n\n### Usage\n\n##### CLI\n\n```\n  Usage: guld-git [options] [command]\n\n  Guld standardized CLI for git.\n\n  Options:\n\n    -V, --version                   output the version number\n    -C --cwd <dir>                  Set current working directory before running.\n    -h, --help                      output usage information\n\n  Commands:\n\n    path                            Blocktree path resolution tools.\n    config                          Configuration manager for git config files.\n    host                            Configuration manager for git hosts.\n    remote                          Manage git remotes the guld way.\n    add [options] [file]            Add files to the git working directory.\n    init                            Create an empty Git repository or reinitialize an existing one.\n    clone [url] [directory]         Clone a repository into a new directory.\n    remove|delete [options] <file>  Remove files from the git working directory.\n    log [options] [fromRef]         List commits from the given ref backwards.\n    status [file]                   Get the status of a file in the working directory.\n    commit [message]                Stores the current contents of the index in a new commit along with a log message from the user describing the changes.\n    fetch [remote] [branch]         Download objects and refs from another repository.\n    push [remote] [branch]          Update remote refs along with associated objects.\n    pull [remote] [branch]          Fetch from and integrate with another repository or a local branch.\n    help [cmd]                      display help for [cmd]\n```\n",
      "html": "<h1>guld-git-cli</h1>\n<p>Guld standardized CLI for git.</p>\n<h3>Example Output</h3>\n<h3>Install</h3>\n<pre><code>npm i -g guld-git-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code>  Usage: guld-git [options] [command]\n\n  Guld standardized CLI for git.\n\n  Options:\n\n    -V, --version                   output the version number\n    -C --cwd &lt;dir&gt;                  Set current working directory before running.\n    -h, --help                      output usage information\n\n  Commands:\n\n    path                            Blocktree path resolution tools.\n    config                          Configuration manager for git config files.\n    host                            Configuration manager for git hosts.\n    remote                          Manage git remotes the guld way.\n    add [options] [file]            Add files to the git working directory.\n    init                            Create an empty Git repository or reinitialize an existing one.\n    clone [url] [directory]         Clone a repository into a new directory.\n    remove|delete [options] &lt;file&gt;  Remove files from the git working directory.\n    log [options] [fromRef]         List commits from the given ref backwards.\n    status [file]                   Get the status of a file in the working directory.\n    commit [message]                Stores the current contents of the index in a new commit along with a log message from the user describing the changes.\n    fetch [remote] [branch]         Download objects and refs from another repository.\n    push [remote] [branch]          Update remote refs along with associated objects.\n    pull [remote] [branch]          Fetch from and integrate with another repository or a local branch.\n    help [cmd]                      display help for [cmd]\n</code></pre>\n",
      "id": 14
    },
    {
      "path": "cli/guld-pass-cli.md",
      "url": "cli/guld-pass-cli.html",
      "content": "# guld-pass-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-pass-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-pass-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-pass-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-pass-cli.svg)](https://www.npmjs.com/package/guld-pass-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-pass-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-pass-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli?type=dev)\n\nEncrypted password management comaptible with Standard Unix Password Store.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-pass-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-pass --help\n\n  Usage: guld-pass [options] [command]\n\n  Encrypted password management comaptible with Standard Unix Password Store.\n\n  Options:\n\n    -V, --version                                 output the version number\n    -u --user <name>                              The user name to run as.\n    -h, --help                                    output usage information\n\n  Commands:\n\n    init [options] <gpg-id...>                    Initialize new password storage and use gpg-id for encryption. Selectively reencrypt existing passwords using new gpg-id.\n    ls [subfolder]                                List passwords.\n    find <pass-names...>                          List passwords that match pass-names.\n    show [options] <pass-name>                    Show existing password and optionally put it on the clipboard.\n    grep <search-string>                          Search for password files containing search-string when decrypted.\n    insert [options] <pass-name>                  Insert new password. Reads from stdin by default.\n    edit <pass-name>                              Insert a new password or edit an existing password using editor.\n    generate [options] <pass-name> [pass-length]  Generate a new password of pass-length (or 25 if unspecified).\n    rm [options] <pass-name>                      Remove existing password or directory, optionally forcefully.\n    mv [options] <old-path> <new-path>            Renames or moves old-path to new-path, optionally forcefully, selectively reencrypting.\n    cp [options] <old-path> <new-path>            Copies old-path to new-path, optionally forcefully, selectively reencrypting.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-pass-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-pass-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-pass-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-pass-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-pass-cli\"><img src=\"https://img.shields.io/npm/v/guld-pass-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-pass-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-pass-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Encrypted password management comaptible with Standard Unix Password Store.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-pass-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-pass --help\n\n  Usage: guld-pass [options] [command]\n\n  Encrypted password management comaptible with Standard Unix Password Store.\n\n  Options:\n\n    -V, --version                                 output the version number\n    -u --user &lt;name&gt;                              The user name to run as.\n    -h, --help                                    output usage information\n\n  Commands:\n\n    init [options] &lt;gpg-id...&gt;                    Initialize new password storage and use gpg-id for encryption. Selectively reencrypt existing passwords using new gpg-id.\n    ls [subfolder]                                List passwords.\n    find &lt;pass-names...&gt;                          List passwords that match pass-names.\n    show [options] &lt;pass-name&gt;                    Show existing password and optionally put it on the clipboard.\n    grep &lt;search-string&gt;                          Search for password files containing search-string when decrypted.\n    insert [options] &lt;pass-name&gt;                  Insert new password. Reads from stdin by default.\n    edit &lt;pass-name&gt;                              Insert a new password or edit an existing password using editor.\n    generate [options] &lt;pass-name&gt; [pass-length]  Generate a new password of pass-length (or 25 if unspecified).\n    rm [options] &lt;pass-name&gt;                      Remove existing password or directory, optionally forcefully.\n    mv [options] &lt;old-path&gt; &lt;new-path&gt;            Renames or moves old-path to new-path, optionally forcefully, selectively reencrypting.\n    cp [options] &lt;old-path&gt; &lt;new-path&gt;            Copies old-path to new-path, optionally forcefully, selectively reencrypting.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 15
    },
    {
      "path": "cli/guld-random-cli.md",
      "url": "cli/guld-random-cli.html",
      "content": "# guld-random-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-random-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-random-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-random-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-random-cli.svg)](https://www.npmjs.com/package/guld-random-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-random-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-random-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli?type=dev)\n\nCryptographically secure random number generator using `/dev/urandom` with fallback to node's `crypto` and finally to `window.crypto || window.mscrypto`.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-random-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-random --help\n\n  Usage: guld-random [options] [command]\n\n  Cryptographically secure random number generator using `/dev/urandom` with fallback to node's `crypto` and finally to `window.crypto || window.mscrypto`.\n\n  Options:\n\n    -V, --version                  output the version number\n    -h, --help                     output usage information\n\n  Commands:\n\n    string|str [length]            Generate a random string of the given length (default 256).\n    number|num [max]               Generate a random integer between 0 and max. (default 255)\n    run [options] <cmd> [args...]  Randomly choose whether to run command with args.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-random-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-random-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-random-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-random-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-random-cli\"><img src=\"https://img.shields.io/npm/v/guld-random-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-random-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-random-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Cryptographically secure random number generator using <code>/dev/urandom</code> with fallback to node’s <code>crypto</code> and finally to <code>window.crypto || window.mscrypto</code>.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-random-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-random --help\n\n  Usage: guld-random [options] [command]\n\n  Cryptographically secure random number generator using `/dev/urandom` with fallback to node's `crypto` and finally to `window.crypto || window.mscrypto`.\n\n  Options:\n\n    -V, --version                  output the version number\n    -h, --help                     output usage information\n\n  Commands:\n\n    string|str [length]            Generate a random string of the given length (default 256).\n    number|num [max]               Generate a random integer between 0 and max. (default 255)\n    run [options] &lt;cmd&gt; [args...]  Randomly choose whether to run command with args.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 16
    },
    {
      "path": "cli/guld-sdk-cli.md",
      "url": "cli/guld-sdk-cli.html",
      "content": "# guld-sdk-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-sdk-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-sdk-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-sdk-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-sdk-cli.svg)](https://www.npmjs.com/package/guld-sdk-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-sdk-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-sdk-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli?type=dev)\n\nSoftware Developer Kit for guld JS packages.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-sdk-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-sdk --help\n\n  Usage: guld-sdk [options] [command]\n\n  Software Developer Kit for guld JS packages.\n\n  Options:\n\n    -V, --version              output the version number\n    -u --user <name>           The user name to run as.\n    -h, --help                 output usage information\n\n  Commands:\n\n    init [options]             Create or update a JS package, including package.json, travis, webpack, and more config files.\n    readme [options]           Guld SDK readme generator. Uses package.json, .travis.yml, and pre-existing README.md files to generate guld-style README.md files like this project's\n    version [options] [vtype]  Guld SDK semantic version manager for packages.\n    upgrade [options]          Upgrade dependencies for a package.\n\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-sdk-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-sdk-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-sdk-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-sdk-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-sdk-cli\"><img src=\"https://img.shields.io/npm/v/guld-sdk-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-sdk-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-sdk-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Software Developer Kit for guld JS packages.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-sdk-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-sdk --help\n\n  Usage: guld-sdk [options] [command]\n\n  Software Developer Kit for guld JS packages.\n\n  Options:\n\n    -V, --version              output the version number\n    -u --user &lt;name&gt;           The user name to run as.\n    -h, --help                 output usage information\n\n  Commands:\n\n    init [options]             Create or update a JS package, including package.json, travis, webpack, and more config files.\n    readme [options]           Guld SDK readme generator. Uses package.json, .travis.yml, and pre-existing README.md files to generate guld-style README.md files like this project's\n    version [options] [vtype]  Guld SDK semantic version manager for packages.\n    upgrade [options]          Upgrade dependencies for a package.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 17
    },
    {
      "path": "cli/guld-user-cli.md",
      "url": "cli/guld-user-cli.html",
      "content": "# guld-user-cli\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-user-cli) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-user-cli/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/cli/guld-user-cli.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-user-cli.svg)](https://www.npmjs.com/package/guld-user-cli) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user-cli.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user-cli?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-user-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-user-cli/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli?type=dev)\n\nGuld user management tools. Get, list, and check users of the guld group.\n\n### Install\n\n##### Node\n\n```sh\nnpm i -g guld-user-cli\n```\n\n### Usage\n\n##### CLI\n\n```sh\nguld-user --help\n\n  Usage: guld-user [options] [command]\n\n  Guld user management tools. Get, list, and check users of the guld group.\n\n  Options:\n\n    -V, --version                 output the version number\n    -u --user <name>              The user name to run as.\n    -h, --help                    output usage information\n\n  Commands:\n\n    init [user-name] [full-name]  Initialize a new guld user.\n    name                          Get the guld name of the current user.\n    fullname                      Get the full name of the current user.\n    branches                      List the user branches which are locally available.\n    alias [options] [name]        List a user's usernames for known aliases for other networks. (i.e. github, bitbucket, gitlab, twitter)\n    exists                        Check whether a guld name already exists.\n    validate                      Check whether a guld name looks valid.\n\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-user-cli</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-user-cli\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-user-cli/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/cli/guld-user-cli.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-user-cli\"><img src=\"https://img.shields.io/npm/v/guld-user-cli.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user-cli?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user-cli.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-user-cli/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-user-cli.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user-cli/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld user management tools. Get, list, and check users of the guld group.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i -g guld-user-cli\n</code></pre>\n<h3>Usage</h3>\n<h5>CLI</h5>\n<pre><code class=\"language-sh\">guld-user --help\n\n  Usage: guld-user [options] [command]\n\n  Guld user management tools. Get, list, and check users of the guld group.\n\n  Options:\n\n    -V, --version                 output the version number\n    -u --user &lt;name&gt;              The user name to run as.\n    -h, --help                    output usage information\n\n  Commands:\n\n    init [user-name] [full-name]  Initialize a new guld user.\n    name                          Get the guld name of the current user.\n    fullname                      Get the full name of the current user.\n    branches                      List the user branches which are locally available.\n    alias [options] [name]        List a user's usernames for known aliases for other networks. (i.e. github, bitbucket, gitlab, twitter)\n    exists                        Check whether a guld name already exists.\n    validate                      Check whether a guld name looks valid.\n\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 18
    },
    {
      "path": "lib/flexfs.md",
      "url": "lib/flexfs.html",
      "content": "# flexfs\n\n[![npm](https://img.shields.io/npm/v/flexfs.svg)](https://www.npmjs.com/package/flexfs) [![Build Status](https://travis-ci.org/isysd/flexfs.svg?branch=master)](https://travis-ci.org/isysd/flexfs) [![Coverage Status](https://coveralls.io/repos/github/isysd/flexfs/badge.svg?branch=master)](https://coveralls.io/github/isysd/flexfs?branch=master)\n\nFlexible and easy to use mixins for node's fs or subclasses. Works in both the browser and nodeJS.\n\n### Installation\n\nPlease use npm to install.\n\n`npm i flexfs`\n\n##### Browser\n\nTo use in the browser, please use browserify or webpack to include and build flexfs. Alternately, use the standalone package in `./dist/flexfs.js`.\n\n### Usage\n\nTo use flexfs, first you must initialize an instance of your favorite `fs` library. For example, node's native [fs](https://nodejs.org/api/fs.html) and [BrowserFS](https://github.com/jvilk/BrowserFS) are used in tests.\n\n\n```\nconst { supplimentFS, extraFS } = require('flexfs')\nconst fs = require('fs')\n// now dynamically attach functions from flexfs mixin\nfs.mkdirp = extraFS.mkdirp\nfs.cpr = extraFS.cpr\n// use fs.mkdirp and fs.cpr\n```\n\nTo use as an es6 class mixin, first use [object-to-class](https://bitbucket.org/isysd/object-to-class).\n\n\n```\nconst o2c = require('object-to-class')\nconst ExtraFS = o2c(extraFS, 'ExtraFS')\nclass MyFS extends ExtraFS {}\nlet myfs = new MyFS()\nmyfs instanceof ExtraFS // true\n```\n\n### Promise API\n\nEvery function is either natively written for Promises or is converted using [pify](https://github.com/sindresorhus/pify).\n\n### Mixins\n\n##### extraFS\n\nThe following functions were implemented as extras, available through ExtraFS.\n\n| Function | Description |\n|----------|-------------|\n| mkdirp   | Make a directory and any parent directories which didn't exists. |\n| cpr | Copy a directory recursively. |\n| mvr | Move a directory recursively. |\n| rimraf | Remove a directory recursively. |\n\n##### supplimentFS\n\nThe following functions are alternate implementation of core fs functionality. They are useful for incomplete or new fs implementations.\n\n| Function | Description |\n|----------|-------------|\n| copyFile | Copy a file from old location to new. (standard) |\n\n",
      "html": "<h1>flexfs</h1>\n<p><a href=\"https://www.npmjs.com/package/flexfs\"><img src=\"https://img.shields.io/npm/v/flexfs.svg\" alt=\"npm\"></a> <a href=\"https://travis-ci.org/isysd/flexfs\"><img src=\"https://travis-ci.org/isysd/flexfs.svg?branch=master\" alt=\"Build Status\"></a> <a href=\"https://coveralls.io/github/isysd/flexfs?branch=master\"><img src=\"https://coveralls.io/repos/github/isysd/flexfs/badge.svg?branch=master\" alt=\"Coverage Status\"></a></p>\n<p>Flexible and easy to use mixins for node’s fs or subclasses. Works in both the browser and nodeJS.</p>\n<h3>Installation</h3>\n<p>Please use npm to install.</p>\n<p><code>npm i flexfs</code></p>\n<h5>Browser</h5>\n<p>To use in the browser, please use browserify or webpack to include and build flexfs. Alternately, use the standalone package in <code>./dist/flexfs.js</code>.</p>\n<h3>Usage</h3>\n<p>To use flexfs, first you must initialize an instance of your favorite <code>fs</code> library. For example, node’s native <a href=\"https://nodejs.org/api/fs.html\">fs</a> and <a href=\"https://github.com/jvilk/BrowserFS\">BrowserFS</a> are used in tests.</p>\n<pre><code>const { supplimentFS, extraFS } = require('flexfs')\nconst fs = require('fs')\n// now dynamically attach functions from flexfs mixin\nfs.mkdirp = extraFS.mkdirp\nfs.cpr = extraFS.cpr\n// use fs.mkdirp and fs.cpr\n</code></pre>\n<p>To use as an es6 class mixin, first use <a href=\"https://bitbucket.org/isysd/object-to-class\">object-to-class</a>.</p>\n<pre><code>const o2c = require('object-to-class')\nconst ExtraFS = o2c(extraFS, 'ExtraFS')\nclass MyFS extends ExtraFS {}\nlet myfs = new MyFS()\nmyfs instanceof ExtraFS // true\n</code></pre>\n<h3>Promise API</h3>\n<p>Every function is either natively written for Promises or is converted using <a href=\"https://github.com/sindresorhus/pify\">pify</a>.</p>\n<h3>Mixins</h3>\n<h5>extraFS</h5>\n<p>The following functions were implemented as extras, available through ExtraFS.</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mkdirp</td>\n<td>Make a directory and any parent directories which didn’t exists.</td>\n</tr>\n<tr>\n<td>cpr</td>\n<td>Copy a directory recursively.</td>\n</tr>\n<tr>\n<td>mvr</td>\n<td>Move a directory recursively.</td>\n</tr>\n<tr>\n<td>rimraf</td>\n<td>Remove a directory recursively.</td>\n</tr>\n</tbody>\n</table>\n<h5>supplimentFS</h5>\n<p>The following functions are alternate implementation of core fs functionality. They are useful for incomplete or new fs implementations.</p>\n<table>\n<thead>\n<tr>\n<th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>copyFile</td>\n<td>Copy a file from old location to new. (standard)</td>\n</tr>\n</tbody>\n</table>\n",
      "id": 19
    },
    {
      "path": "lib/gpg-conf.md",
      "url": "lib/gpg-conf.html",
      "content": "# gpg-conf\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-gpg-conf) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-gpg-conf/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/gpg-conf.html)\n\n[![node package manager](https://img.shields.io/npm/v/gpg-conf.svg)](https://www.npmjs.com/package/gpg-conf) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-gpg-conf.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-gpg-conf?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-gpg-conf.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-gpg-conf/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf?type=dev)\n\nGPG configuration manager.\n\n### Install\n\n##### Node\n\n```sh\nnpm i gpg-conf\n```\n\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n",
      "html": "<h1>gpg-conf</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-gpg-conf\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-gpg-conf/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/gpg-conf.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/gpg-conf\"><img src=\"https://img.shields.io/npm/v/gpg-conf.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-gpg-conf?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-gpg-conf.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-gpg-conf/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-gpg-conf.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-gpg-conf/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>GPG configuration manager.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i gpg-conf\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 20
    },
    {
      "path": "lib/guld-app.md",
      "url": "lib/guld-app.html",
      "content": "# guld-chrome\n\nChrome extension to support Guld applications\n\nThis extension provides a wallet, ledger interaction, and PGP key management, so you can focus on your app's unique functionality.\n\nTo make a browser-based app (in this case, a Chrome extension) work with [`ledger`](http://ledger-cli.org/), a fundamentally command-line oriented application, we've had to patch and/or fork a number of its dependencies. Here's an overview of what it takes to get this extension running.\n\n## Ledger\n\n[**Ledger 3.0**](http://ledger-cli.org/) is expected to be installed on the host machine. Additionally, these libraries are needed:\n\n* [ledger-cli-browser](https://bitbucket.org/isysd/ledger-cli-browser), our rewrite of node-ledger\n* [ledger-types](https://bitbucket.org/isysd/ledger-types), our new safe math library for JS ledger\n* [ledger-native](https://bitbucket.org/guld/ledger-native), our native messenger bindings\n\nWe are considering making a dedicated ledger extension to manage this connection and data.\n\n## PGP\n\nOnly [openpgp.js](https://github.com/openpgpjs/openpgpjs) is required, and no forking is necessary.\n\n## git\n\nFor the most part, [isomorphic-git](https://github.com/isomorphic-git/isomorphic-git) is safe to use. We are currently developing on our own fork, pending the merge of a pull request, or an alternative fix. The project maintainer is very active and communicative, so we are hopeful that we won't need our fork for long.\n\n### guld\n\nWe are using the [js-guld-lib](https://bitbucket.org/guld/js-guld-lib) library.\n\n## GG-specific\n\nThe [GG JavaScript library](https://github.com/guld-games/js-gg-lib) is not published yet.\n\nThis is forked from the [GG Chrome extension](https://github.com/guld-games/gg-chrome).\n",
      "html": "<h1>guld-chrome</h1>\n<p>Chrome extension to support Guld applications</p>\n<p>This extension provides a wallet, ledger interaction, and PGP key management, so you can focus on your app’s unique functionality.</p>\n<p>To make a browser-based app (in this case, a Chrome extension) work with <a href=\"http://ledger-cli.org/\"><code>ledger</code></a>, a fundamentally command-line oriented application, we’ve had to patch and/or fork a number of its dependencies. Here’s an overview of what it takes to get this extension running.</p>\n<h2>Ledger</h2>\n<p><a href=\"http://ledger-cli.org/\"><strong>Ledger 3.0</strong></a> is expected to be installed on the host machine. Additionally, these libraries are needed:</p>\n<ul>\n<li><a href=\"https://bitbucket.org/isysd/ledger-cli-browser\">ledger-cli-browser</a>, our rewrite of node-ledger</li>\n<li><a href=\"https://bitbucket.org/isysd/ledger-types\">ledger-types</a>, our new safe math library for JS ledger</li>\n<li><a href=\"https://bitbucket.org/guld/ledger-native\">ledger-native</a>, our native messenger bindings</li>\n</ul>\n<p>We are considering making a dedicated ledger extension to manage this connection and data.</p>\n<h2>PGP</h2>\n<p>Only <a href=\"https://github.com/openpgpjs/openpgpjs\">openpgp.js</a> is required, and no forking is necessary.</p>\n<h2>git</h2>\n<p>For the most part, <a href=\"https://github.com/isomorphic-git/isomorphic-git\">isomorphic-git</a> is safe to use. We are currently developing on our own fork, pending the merge of a pull request, or an alternative fix. The project maintainer is very active and communicative, so we are hopeful that we won’t need our fork for long.</p>\n<h3>guld</h3>\n<p>We are using the <a href=\"https://bitbucket.org/guld/js-guld-lib\">js-guld-lib</a> library.</p>\n<h2>GG-specific</h2>\n<p>The <a href=\"https://github.com/guld-games/js-gg-lib\">GG JavaScript library</a> is not published yet.</p>\n<p>This is forked from the <a href=\"https://github.com/guld-games/gg-chrome\">GG Chrome extension</a>.</p>\n",
      "id": 21
    },
    {
      "path": "lib/guld-cli-run.md",
      "url": "lib/guld-cli-run.html",
      "content": "# guld-cli-run\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-cli-run) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-cli-run/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-cli-run.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-cli-run.svg)](https://www.npmjs.com/package/guld-cli-run) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli-run.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli-run?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-cli-run.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-cli-run/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run?type=dev)\n\nA contextual runner for commander based CLIs.\n\n### Install\n\n### Usage\n\nRun with the commander program, a default handler function and a success handler function. The default handler is run if the command is executed with no arguments. Otherwise, the success handler is run. Bind `runCLI` to the program for best results.\n\n```\nrunCLI.bind(program)(program.help, program.parse)\n```\n\n##### node\n\n```javascript\nvar runCLI = require('guld-cli-run')\n```\n\n### License\n\nMIT Copyright guld\n\n",
      "html": "<h1>guld-cli-run</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-cli-run\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-cli-run/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-cli-run.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-cli-run\"><img src=\"https://img.shields.io/npm/v/guld-cli-run.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli-run?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-cli-run.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-cli-run/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-cli-run.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-cli-run/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>A contextual runner for commander based CLIs.</p>\n<h3>Install</h3>\n<h3>Usage</h3>\n<p>Run with the commander program, a default handler function and a success handler function. The default handler is run if the command is executed with no arguments. Otherwise, the success handler is run. Bind <code>runCLI</code> to the program for best results.</p>\n<pre><code>runCLI.bind(program)(program.help, program.parse)\n</code></pre>\n<h5>node</h5>\n<pre><code class=\"language-javascript\">var runCLI = require('guld-cli-run')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright guld</p>\n",
      "id": 22
    },
    {
      "path": "lib/guld-docs.md",
      "url": "lib/guld-docs.html",
      "content": "# guld documents\n\n* Install dependencies:\n\n```bash\nnpm install\n```\n\n\n* Compile:\n\n```bash\nnpm run docs\n```\n",
      "html": "<h1>guld documents</h1>\n<ul>\n<li>Install dependencies:</li>\n</ul>\n<pre><code class=\"language-bash\">npm install\n</code></pre>\n<ul>\n<li>Compile:</li>\n</ul>\n<pre><code class=\"language-bash\">npm run docs\n</code></pre>\n",
      "id": 23
    },
    {
      "path": "lib/guld-env.md",
      "url": "lib/guld-env.html",
      "content": "# guld-env\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-env) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-env/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-env.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-env.svg)](https://www.npmjs.com/package/guld-env) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-env.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-env/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-env?type=dev)\n\nGuld environment detection module.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-env\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-guld-env/raw/guld/guld-env.min.js -o guld-env.min.js\n```\n\n### Usage\n\n```\n// properties\nconsole.log(guldEnv.name) // chrome\nconsole.log(guldEnv.version) // 70.x.x\nconsole.log(guldEnv.JS) // chrome@70.x.x\nconsole.log(guldEnv.protocol) // file\n\n// async\nguldEnv.os().then(console.log)\n/*\n{ os: 'linux',\n  dist: 'Ubuntu',\n  codename: 'bionic',\n  release: '18.04' }\n*/\n```\n\n##### Node\n\n```\nconst guldEnv = require('guld-env')\n```\n\n##### Browser\n\n```\n<script src=\"guld-env.min.js\"></script>\n```\n\n##### CLI\n\nThe cli for this module is named `guld-env-cli` and is available from guld git hosts and npm.\n\n```\nnpm i -g guld-env-cli\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-env</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-env\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-env/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-env.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-env\"><img src=\"https://img.shields.io/npm/v/guld-env.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-env.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-env/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-env.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-env/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld environment detection module.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-env\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-guld-env/raw/guld/guld-env.min.js -o guld-env.min.js\n</code></pre>\n<h3>Usage</h3>\n<pre><code>// properties\nconsole.log(guldEnv.name) // chrome\nconsole.log(guldEnv.version) // 70.x.x\nconsole.log(guldEnv.JS) // chrome@70.x.x\nconsole.log(guldEnv.protocol) // file\n\n// async\nguldEnv.os().then(console.log)\n/*\n{ os: 'linux',\n  dist: 'Ubuntu',\n  codename: 'bionic',\n  release: '18.04' }\n*/\n</code></pre>\n<h5>Node</h5>\n<pre><code>const guldEnv = require('guld-env')\n</code></pre>\n<h5>Browser</h5>\n<pre><code>&lt;script src=&quot;guld-env.min.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<h5>CLI</h5>\n<p>The cli for this module is named <code>guld-env-cli</code> and is available from guld git hosts and npm.</p>\n<pre><code>npm i -g guld-env-cli\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 24
    },
    {
      "path": "lib/guld-fs-foreach.md",
      "url": "lib/guld-fs-foreach.html",
      "content": "# guld-fs-foreach\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-fs-foreach.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-fs-foreach.svg)](https://www.npmjs.com/package/guld-fs-foreach) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-foreach.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-foreach/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach?type=dev)\n\nRun command for each file and/or directory in the given directory.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-fs-foreach\n```\n\n### Usage\n\n```\nawait foreach(path, fn, args)\n```\n\n##\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-fs-foreach</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-foreach/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-fs-foreach.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-fs-foreach\"><img src=\"https://img.shields.io/npm/v/guld-fs-foreach.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-foreach.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-foreach/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-foreach.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-foreach/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Run command for each file and/or directory in the given directory.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-fs-foreach\n</code></pre>\n<h3>Usage</h3>\n<pre><code>await foreach(path, fn, args)\n</code></pre>\n<h2></h2>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 25
    },
    {
      "path": "lib/guld-fs-str-replace.md",
      "url": "lib/guld-fs-str-replace.html",
      "content": "# guld-fs-str-replace\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-fs-str-replace.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-fs-str-replace.svg)](https://www.npmjs.com/package/guld-fs-str-replace) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-str-replace.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-str-replace/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace?type=dev)\n\nReplace old-string with new-string for all files in path.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-fs-str-replace\n```\n\n### Usage\n\n```\nawait strReplace(path, oldstr, newstr)\n```\n\n##### Node\n\n```\nconst strReplace = require('guld-fs-str-replace')\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-fs-str-replace</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs-str-replace/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-fs-str-replace.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-fs-str-replace\"><img src=\"https://img.shields.io/npm/v/guld-fs-str-replace.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs-str-replace.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs-str-replace/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs-str-replace.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs-str-replace/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Replace old-string with new-string for all files in path.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-fs-str-replace\n</code></pre>\n<h3>Usage</h3>\n<pre><code>await strReplace(path, oldstr, newstr)\n</code></pre>\n<h5>Node</h5>\n<pre><code>const strReplace = require('guld-fs-str-replace')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 26
    },
    {
      "path": "lib/guld-fs.md",
      "url": "lib/guld-fs.html",
      "content": "# guld-fs\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-fs/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-fs.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-fs.svg)](https://www.npmjs.com/package/guld-fs) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs?type=dev)\n\nGuld file system abstraction module.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-fs\n```\n\n### Usage\n\n```\n\n// must be in an async function.\nvar fs = await getFS(pify=true) // pify=false to not pify the returned fs\n// Now use fs with optional promises and extra functions.\nfs.mkdirp('/long/non/existing/path/chain')\nfs.cpr('/long/non/existing/path/chain', '/tmp/')\nfs.rimraf('/tmp/')\n```\n\n##\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-fs</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-fs/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-fs.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-fs\"><img src=\"https://img.shields.io/npm/v/guld-fs.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-fs.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-fs/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-fs.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-fs/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld file system abstraction module.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-fs\n</code></pre>\n<h3>Usage</h3>\n<pre><code>\n// must be in an async function.\nvar fs = await getFS(pify=true) // pify=false to not pify the returned fs\n// Now use fs with optional promises and extra functions.\nfs.mkdirp('/long/non/existing/path/chain')\nfs.cpr('/long/non/existing/path/chain', '/tmp/')\nfs.rimraf('/tmp/')\n</code></pre>\n<h2></h2>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 27
    },
    {
      "path": "lib/guld-git-config-ini.md",
      "url": "lib/guld-git-config-ini.html",
      "content": "# guld-git-config-ini\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-ini) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-ini/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-config-ini.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-config-ini.svg)](https://www.npmjs.com/package/guld-git-config-ini) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-ini.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-ini?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-config-ini.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-config-ini/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini?type=dev)\n\nA git config ini encoder/decoder for guld\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-config-ini\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-guld-git-config-ini/raw/guld/ini.min.js -o ini.min.js\n```\n\n### Usage\n\nConsider an git config ini-file `.git/config` that looks like this:\n\n    [core]\n        repositoryformatversion = 0\n        filemode = true\n        bare = false\n        logallrefupdates = true\n        ignorecase = true\n        precomposeunicode = true\n    [remote \"origin\"]\n        url = https://github.com/nfer/git-config-ini\n        fetch = +refs/heads/*:refs/remotes/origin/*\n    [user]\n        name = Nfer Zhuang\n\nYou can read, manipulate and write the ini-file like so:\n\n    var fs = require('fs')\n      , ini = require('ini')\n\n    var config = ini.parse(fs.readFileSync('.git/config', 'utf-8'))\n\n    config.core.filemode = false\n    config.user.name = 'nfer'\n    config.user.email = 'nfer@nferzhuang.com'\n\n    fs.writeFileSync('.git/config', ini.stringify(config))\n\n#### Browser\n\nThis script has been bundled for browser use and is available as global var `gitConfigIni`.\n\n```\n<html>\n  <body>\n    <script src=\"ini.min.js\"></script>\n    <script>\n      console.log(gitConfigIni)\n    </script>\n  </body>\n</html>\n```\n\n### API\n\n#### decode(inistring)\n\nDecode the ini-style formatted `inistring` into a nested object.\n\n#### parse(inistring)\n\nAlias for `decode(inistring)`\n\n#### encode(object)\n\nEncode the object `object` into an ini-style formatted string.\n\n#### stringify(object)\n\nAlias for `encode(object)`\n\n### License\n\nMIT Copyright Nfer Zhuang <nfer.zhuang@gmail.com>\n\n",
      "html": "<h1>guld-git-config-ini</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-ini\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-config-ini/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-config-ini.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-config-ini\"><img src=\"https://img.shields.io/npm/v/guld-git-config-ini.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-ini?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config-ini.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-config-ini/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-config-ini.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config-ini/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>A git config ini encoder/decoder for guld</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-config-ini\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-guld-git-config-ini/raw/guld/ini.min.js -o ini.min.js\n</code></pre>\n<h3>Usage</h3>\n<p>Consider an git config ini-file <code>.git/config</code> that looks like this:</p>\n<pre><code>[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n    ignorecase = true\n    precomposeunicode = true\n[remote &quot;origin&quot;]\n    url = https://github.com/nfer/git-config-ini\n    fetch = +refs/heads/*:refs/remotes/origin/*\n[user]\n    name = Nfer Zhuang\n</code></pre>\n<p>You can read, manipulate and write the ini-file like so:</p>\n<pre><code>var fs = require('fs')\n  , ini = require('ini')\n\nvar config = ini.parse(fs.readFileSync('.git/config', 'utf-8'))\n\nconfig.core.filemode = false\nconfig.user.name = 'nfer'\nconfig.user.email = 'nfer@nferzhuang.com'\n\nfs.writeFileSync('.git/config', ini.stringify(config))\n</code></pre>\n<h4>Browser</h4>\n<p>This script has been bundled for browser use and is available as global var <code>gitConfigIni</code>.</p>\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;script src=&quot;ini.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n      console.log(gitConfigIni)\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3>API</h3>\n<h4>decode(inistring)</h4>\n<p>Decode the ini-style formatted <code>inistring</code> into a nested object.</p>\n<h4>parse(inistring)</h4>\n<p>Alias for <code>decode(inistring)</code></p>\n<h4>encode(object)</h4>\n<p>Encode the object <code>object</code> into an ini-style formatted string.</p>\n<h4>stringify(object)</h4>\n<p>Alias for <code>encode(object)</code></p>\n<h3>License</h3>\n<p>MIT Copyright Nfer Zhuang <a href=\"mailto:nfer.zhuang@gmail.com\">nfer.zhuang@gmail.com</a></p>\n",
      "id": 28
    },
    {
      "path": "lib/guld-git-config.md",
      "url": "lib/guld-git-config.html",
      "content": "# guld-git-config\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-config) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-config/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-config.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-config.svg)](https://www.npmjs.com/package/guld-git-config) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-config.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-config/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config?type=dev)\n\nGuld configuration helper manages git config files.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-config\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-guld-git-config/raw/guld/guld-git-config.min.js -o guld-git-config.min.js\n```\n\n### Usage\n\n```\n// async\n// assume it's empty\nvar cfg = await getConfig('local') // {}\ncfg.core.test = true\nsetConfig('cfg.core.test', true)\nvar cfg = await getConfig('local') // {core: {test: true}}\n```\n\n### License\n\nMIT Copyright isysd\n\n",
      "html": "<h1>guld-git-config</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-config\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-config/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-config.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-config\"><img src=\"https://img.shields.io/npm/v/guld-git-config.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-config.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-config/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-config.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-config/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld configuration helper manages git config files.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-config\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-guld-git-config/raw/guld/guld-git-config.min.js -o guld-git-config.min.js\n</code></pre>\n<h3>Usage</h3>\n<pre><code>// async\n// assume it's empty\nvar cfg = await getConfig('local') // {}\ncfg.core.test = true\nsetConfig('cfg.core.test', true)\nvar cfg = await getConfig('local') // {core: {test: true}}\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 29
    },
    {
      "path": "lib/guld-git-host-bitbucket.md",
      "url": "lib/guld-git-host-bitbucket.html",
      "content": "# guld-git-host-bitbucket\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-bitbucket) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-bitbucket/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-host-bitbucket.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-host-bitbucket.svg)](https://www.npmjs.com/package/guld-git-host-bitbucket) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host-bitbucket.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host-bitbucket/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket?type=dev)\n\nGuld configuration manager for bitbucket.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-host-bitbucket\n```\n\n### Usage\n\n##### Node\n\n```\nconst bitbucket = require('guld-git-host-bitbucket')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-host-bitbucket</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-bitbucket\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-bitbucket/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-host-bitbucket.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-host-bitbucket\"><img src=\"https://img.shields.io/npm/v/guld-git-host-bitbucket.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host-bitbucket/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host-bitbucket.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-bitbucket/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld configuration manager for bitbucket.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-host-bitbucket\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const bitbucket = require('guld-git-host-bitbucket')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 30
    },
    {
      "path": "lib/guld-git-host-github.md",
      "url": "lib/guld-git-host-github.html",
      "content": "# guld-git-host-github\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-github) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-github/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-host-github.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-host-github.svg)](https://www.npmjs.com/package/guld-git-host-github) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-github.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-github?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host-github.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host-github/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github?type=dev)\n\nGuld configuration manager for github.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-host-github\n```\n\n### Usage\n\n##### Node\n\n```\nconst github = require('guld-git-host-github')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-host-github</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-github\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-github/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-host-github.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-host-github\"><img src=\"https://img.shields.io/npm/v/guld-git-host-github.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-github?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-github.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host-github/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host-github.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-github/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld configuration manager for github.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-host-github\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const github = require('guld-git-host-github')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 31
    },
    {
      "path": "lib/guld-git-host-gitlab.md",
      "url": "lib/guld-git-host-gitlab.html",
      "content": "# guld-git-host-gitlab\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-gitlab) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-gitlab/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-host-gitlab.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-host-gitlab.svg)](https://www.npmjs.com/package/guld-git-host-gitlab) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host-gitlab.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host-gitlab/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab?type=dev)\n\nGuld configuration manager for gitlab.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-host-gitlab\n```\n\n### Usage\n\n##### Node\n\n```\nconst gitlab = require('guld-git-host-gitlab')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-host-gitlab</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-gitlab\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host-gitlab/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-host-gitlab.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-host-gitlab\"><img src=\"https://img.shields.io/npm/v/guld-git-host-gitlab.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host-gitlab/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host-gitlab.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host-gitlab/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld configuration manager for gitlab.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-host-gitlab\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const gitlab = require('guld-git-host-gitlab')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 32
    },
    {
      "path": "lib/guld-git-host.md",
      "url": "lib/guld-git-host.html",
      "content": "# guld-git-host\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-host/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-host.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-host.svg)](https://www.npmjs.com/package/guld-git-host) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host?type=dev)\n\nGuld configuration manager for git hosts.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-host\n```\n\n### Usage\n\n##### Node\n\n```\nconst gitHost = require('guld-git-host')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-host</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-host/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-host.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-host\"><img src=\"https://img.shields.io/npm/v/guld-git-host.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-host.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-host/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-host.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-host/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld configuration manager for git hosts.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-host\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const gitHost = require('guld-git-host')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 33
    },
    {
      "path": "lib/guld-git-path.md",
      "url": "lib/guld-git-path.html",
      "content": "# guld-git-path\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-path) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-path/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-path.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-path.svg)](https://www.npmjs.com/package/guld-git-path) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-path.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-path/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path?type=dev)\n\nGuld tool for getting the git directory of a path, or converting local paths into git-friendly repo names.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-path\n```\n\n### Usage\n\n```\n// async\ngetGitDir().then(console.log)\n```\n\n##### Example Output\n\n```\n/home/isysd/tech/js/node_modules/guld-git-path/.git\n```\n\n##### Node\n\n```\nconst { getGitDir, pathEscape } = require('guld-git-path')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-path</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-path\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-path/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-path.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-path\"><img src=\"https://img.shields.io/npm/v/guld-git-path.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-path.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-path/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-path.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-path/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld tool for getting the git directory of a path, or converting local paths into git-friendly repo names.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-path\n</code></pre>\n<h3>Usage</h3>\n<pre><code>// async\ngetGitDir().then(console.log)\n</code></pre>\n<h5>Example Output</h5>\n<pre><code>/home/isysd/tech/js/node_modules/guld-git-path/.git\n</code></pre>\n<h5>Node</h5>\n<pre><code>const { getGitDir, pathEscape } = require('guld-git-path')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 34
    },
    {
      "path": "lib/guld-git-remote.md",
      "url": "lib/guld-git-remote.html",
      "content": "# guld-git-remote\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-remote) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git-remote/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git-remote.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git-remote.svg)](https://www.npmjs.com/package/guld-git-remote) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-remote.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-remote?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-remote.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-remote/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote?type=dev)\n\nGuld tool for managing git remotes.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git-remote\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-guld-git-remote/raw/guld/guld-git-remote.min.js -o guld-git-remote.min.js\n```\n\n### Usage\n\n##### Node\n\n```\nconst { addRemote, deleteRemote } = require('guld-git-remote')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git-remote</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-remote\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git-remote/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git-remote.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git-remote\"><img src=\"https://img.shields.io/npm/v/guld-git-remote.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-remote?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git-remote.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git-remote/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git-remote.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git-remote/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld tool for managing git remotes.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git-remote\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-guld-git-remote/raw/guld/guld-git-remote.min.js -o guld-git-remote.min.js\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const { addRemote, deleteRemote } = require('guld-git-remote')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 35
    },
    {
      "path": "lib/guld-git.md",
      "url": "lib/guld-git.html",
      "content": "# guld-git\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-git/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-git.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-git.svg)](https://www.npmjs.com/package/guld-git) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-git?type=dev)\n\nGuld git abstraction module.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-git\n```\n\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-git</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-git/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-git.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-git\"><img src=\"https://img.shields.io/npm/v/guld-git.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-git.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-git/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-git.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-git/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld git abstraction module.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-git\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 36
    },
    {
      "path": "lib/guld-ledger-grant.md",
      "url": "lib/guld-ledger-grant.html",
      "content": "# guld-fs\n\nGuld file system abstraction module.\n\n### Install\n\n```\nnpm i guld-fs\n```\n\n### Usage\n\n```\n\n// must be in an async function.\nvar fs = await getFS(pify=true) // pify=false to not pify the returned fs\n// Now use fs with optional promises and extra functions.\nfs.mkdirp('/long/non/existing/path/chain')\nfs.cpr('/long/non/existing/path/chain', '/tmp/')\nfs.rimraf('/tmp/')\n```\n\n##### Node\n\n```\nconst { getFS } = require('guld-fs')\n```\n",
      "html": "<h1>guld-fs</h1>\n<p>Guld file system abstraction module.</p>\n<h3>Install</h3>\n<pre><code>npm i guld-fs\n</code></pre>\n<h3>Usage</h3>\n<pre><code>\n// must be in an async function.\nvar fs = await getFS(pify=true) // pify=false to not pify the returned fs\n// Now use fs with optional promises and extra functions.\nfs.mkdirp('/long/non/existing/path/chain')\nfs.cpr('/long/non/existing/path/chain', '/tmp/')\nfs.rimraf('/tmp/')\n</code></pre>\n<h5>Node</h5>\n<pre><code>const { getFS } = require('guld-fs')\n</code></pre>\n",
      "id": 37
    },
    {
      "path": "lib/guld-ledger-register.md",
      "url": "lib/guld-ledger-register.html",
      "content": "# guld-ledger-register\n\nGuld ledger register generic.\n\n### Install\n\n```\nnpm i guld-ledger-register\n```\n\n### Usage\n\n```\n```\n",
      "html": "<h1>guld-ledger-register</h1>\n<p>Guld ledger register generic.</p>\n<h3>Install</h3>\n<pre><code>npm i guld-ledger-register\n</code></pre>\n<h3>Usage</h3>\n<pre><code></code></pre>\n",
      "id": 38
    },
    {
      "path": "lib/guld-ledger-transfer.md",
      "url": "lib/guld-ledger-transfer.html",
      "content": "# guld-ledger-transfer\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-ledger-transfer) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-ledger-transfer/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-ledger-transfer.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-ledger-transfer.svg)](https://www.npmjs.com/package/guld-ledger-transfer) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-ledger-transfer.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-ledger-transfer?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-ledger-transfer.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-ledger-transfer/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer?type=dev)\n\nGuld ledger transfer generic.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-ledger-transfer\n```\n\n### Usage\n\n```\nLedgerTransfer.create('sender', 'receipient', 1.1, 'GULD')\n\nXXXX/XX/XX * transfer\n    ; timestamp: xxxxxxxxxxx\n    sender:Assets   -1.1 GULD\n    sender:Expenses   1.1 GULD\n    recipient:Assets   1.1 GULD\n    recipient:Income   -1.1 GULD\n\n```\n\n##### Node\n\n```\nconst LedgerTransfer = require('guld-ledger-transfer')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-ledger-transfer</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-ledger-transfer\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-ledger-transfer/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-ledger-transfer.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-ledger-transfer\"><img src=\"https://img.shields.io/npm/v/guld-ledger-transfer.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-ledger-transfer?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-ledger-transfer.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-ledger-transfer/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-ledger-transfer.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-ledger-transfer/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld ledger transfer generic.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-ledger-transfer\n</code></pre>\n<h3>Usage</h3>\n<pre><code>LedgerTransfer.create('sender', 'receipient', 1.1, 'GULD')\n\nXXXX/XX/XX * transfer\n    ; timestamp: xxxxxxxxxxx\n    sender:Assets   -1.1 GULD\n    sender:Expenses   1.1 GULD\n    recipient:Assets   1.1 GULD\n    recipient:Income   -1.1 GULD\n\n</code></pre>\n<h5>Node</h5>\n<pre><code>const LedgerTransfer = require('guld-ledger-transfer')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 39
    },
    {
      "path": "lib/guld-mail.md",
      "url": "lib/guld-mail.html",
      "content": "# guld-mail\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-mail) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-mail/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-mail.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-mail.svg)](https://www.npmjs.com/package/guld-mail) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-mail.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-mail/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail?type=dev)\n\nGuld mail is a signed, encrypted, and witnessed email system.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-mail\n```\n\n### Usage\n\n##### Node\n\n```\nconst { getMail } = require('guld-mail')\n```\n\n##### CLI\n\nSee [guld-mail-cli](https://bitbucket.org/isysd/tech-js-node_modules-guld-mail-cli).\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-mail</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-mail\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-mail/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-mail.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-mail\"><img src=\"https://img.shields.io/npm/v/guld-mail.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-mail.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-mail/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-mail.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-mail/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld mail is a signed, encrypted, and witnessed email system.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-mail\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const { getMail } = require('guld-mail')\n</code></pre>\n<h5>CLI</h5>\n<p>See <a href=\"https://bitbucket.org/isysd/tech-js-node_modules-guld-mail-cli\">guld-mail-cli</a>.</p>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 40
    },
    {
      "path": "lib/guld-pass.md",
      "url": "lib/guld-pass.html",
      "content": "# guld-pass\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-pass) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-pass/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-pass.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-pass.svg)](https://www.npmjs.com/package/guld-pass) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-pass.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-pass/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass?type=dev)\n\nEncrypted password management comaptible with Standard Unix Password Store.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-pass\n```\n\n### Usage\n\n##### Node\n\n```\nconst { init, merge, show, insert, parsePass, stringifyPass } = require('guld-pass')\n```\n\n##### CLI\n\nSee [guld-user-cli](https://bitbucket.org/isysd/tech-js-node_modules-guld-pass-cli).\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-pass</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-pass\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-pass/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-pass.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-pass\"><img src=\"https://img.shields.io/npm/v/guld-pass.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-pass.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-pass/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-pass.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-pass/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Encrypted password management comaptible with Standard Unix Password Store.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-pass\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const { init, merge, show, insert, parsePass, stringifyPass } = require('guld-pass')\n</code></pre>\n<h5>CLI</h5>\n<p>See <a href=\"https://bitbucket.org/isysd/tech-js-node_modules-guld-pass-cli\">guld-user-cli</a>.</p>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 41
    },
    {
      "path": "lib/guld-random.md",
      "url": "lib/guld-random.html",
      "content": "# guld-random\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-random) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-random/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-random.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-random.svg)](https://www.npmjs.com/package/guld-random) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-random.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-random/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-random?type=dev)\n\nCryptographically secure random number generator using `/dev/urandom` with fallback to node's `crypto` and finally to `window.crypto || window.mscrypto`.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-random\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-guld-random/raw/guld/guld-random.min.js -o guld-random.min.js\n```\n\n### Usage\n\n```\n// get random buffer of length 100\nvar buff = await getRandBuffer(100)\n\n// get random, alphanumeric (default) string of length 100\nvar str = await getRandStr(100)\n\n// get random, alphanumeric + special string of length 100\nvar str = await getRandStr(100, 'all')\n\n// get random number less than or equal to 100\nvar num = await getRandInt(100)\n```\n\n##### Node\n\n```\nconst { getHaystack, getRandBuffer, getRandStr, getRandInt } = require('guld-random')\n```\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-random</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-random\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-random/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-random.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-random\"><img src=\"https://img.shields.io/npm/v/guld-random.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-random.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-random/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-random.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-random/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Cryptographically secure random number generator using <code>/dev/urandom</code> with fallback to node’s <code>crypto</code> and finally to <code>window.crypto || window.mscrypto</code>.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-random\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-guld-random/raw/guld/guld-random.min.js -o guld-random.min.js\n</code></pre>\n<h3>Usage</h3>\n<pre><code>// get random buffer of length 100\nvar buff = await getRandBuffer(100)\n\n// get random, alphanumeric (default) string of length 100\nvar str = await getRandStr(100)\n\n// get random, alphanumeric + special string of length 100\nvar str = await getRandStr(100, 'all')\n\n// get random number less than or equal to 100\nvar num = await getRandInt(100)\n</code></pre>\n<h5>Node</h5>\n<pre><code>const { getHaystack, getRandBuffer, getRandStr, getRandInt } = require('guld-random')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 42
    },
    {
      "path": "lib/guld-sdk.md",
      "url": "lib/guld-sdk.html",
      "content": "# guld-sdk\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-sdk) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-sdk/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-sdk.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-sdk.svg)](https://www.npmjs.com/package/guld-sdk) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-sdk.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-sdk/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk?type=dev)\n\nSoftware Developer Kit for guld JS packages.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-sdk\n```\n\n### Usage\n\n```\n// properties\nguldSDK.genReadme().then(console.log) // output this file or one like it\n\n```\n\n##### Node\n\n```\nconst guldSDK = require('guld-sdk')\n```\n\n### License\n\nMIT Copyright guld\n",
      "html": "<h1>guld-sdk</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-sdk\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-sdk/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-sdk.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-sdk\"><img src=\"https://img.shields.io/npm/v/guld-sdk.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-sdk.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-sdk/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-sdk.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-sdk/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Software Developer Kit for guld JS packages.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-sdk\n</code></pre>\n<h3>Usage</h3>\n<pre><code>// properties\nguldSDK.genReadme().then(console.log) // output this file or one like it\n\n</code></pre>\n<h5>Node</h5>\n<pre><code>const guldSDK = require('guld-sdk')\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright guld</p>\n",
      "id": 43
    },
    {
      "path": "lib/guld-spawn.md",
      "url": "lib/guld-spawn.html",
      "content": "# guld-spawn\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-spawn) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-spawn/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-spawn.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-spawn.svg)](https://www.npmjs.com/package/guld-spawn) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-spawn.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-spawn?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-spawn.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-spawn/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn?type=dev)\n\nPromisified process spawner for node or chrome native messenger. Chrome native messenger must be installed and called from a paired chrome extension. With stdin support and optional stderr redirect to stdout.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-spawn\n```\n\n### Usage\n\n``` JS\nconst {getSpawn, nodeSpawn, chromeSpawn} = require('guld-spawn')\n\n// either nodeSpawn or chromeSpawn depending on environment\nvar spawn = getSpawn()\n\n// note: this is not an async function, for brevity\nvar stdout = await spawn('ledger', '', ['.f', 'ledger.dat', 'bal'])\n```\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n\n",
      "html": "<h1>guld-spawn</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-spawn\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-spawn/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-spawn.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-spawn\"><img src=\"https://img.shields.io/npm/v/guld-spawn.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-spawn?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-spawn.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-spawn/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-spawn.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-spawn/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Promisified process spawner for node or chrome native messenger. Chrome native messenger must be installed and called from a paired chrome extension. With stdin support and optional stderr redirect to stdout.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-spawn\n</code></pre>\n<h3>Usage</h3>\n<pre><code class=\"language-JS\">const {getSpawn, nodeSpawn, chromeSpawn} = require('guld-spawn')\n\n// either nodeSpawn or chromeSpawn depending on environment\nvar spawn = getSpawn()\n\n// note: this is not an async function, for brevity\nvar stdout = await spawn('ledger', '', ['.f', 'ledger.dat', 'bal'])\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 44
    },
    {
      "path": "lib/guld-user.md",
      "url": "lib/guld-user.html",
      "content": "# guld-user\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-user) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-guld-user/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/guld-user.html)\n\n[![node package manager](https://img.shields.io/npm/v/guld-user.svg)](https://www.npmjs.com/package/guld-user) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-user.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-user/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-guld-user?type=dev)\n\nGuld user management tools.\n\n### Install\n\n##### Node\n\n```sh\nnpm i guld-user\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-guld-user/raw/guld/guld-user.min.js -o guld-user.min.js\n```\n\n### Usage\n\n##### Node\n\n```\nconst { getName, getFullName, validate, exists, getHosts } = require('guld-user')\n```\n\n##### CLI\n\nSee [guld-user-cli](https://bitbucket.org/isysd/tech-js-node_modules-guld-user-cli).\n\n### License\n\nMIT Copyright isysd\n",
      "html": "<h1>guld-user</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-user\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-guld-user/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/guld-user.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/guld-user\"><img src=\"https://img.shields.io/npm/v/guld-user.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-guld-user.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-guld-user/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-guld-user.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-guld-user/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Guld user management tools.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i guld-user\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-guld-user/raw/guld/guld-user.min.js -o guld-user.min.js\n</code></pre>\n<h3>Usage</h3>\n<h5>Node</h5>\n<pre><code>const { getName, getFullName, validate, exists, getHosts } = require('guld-user')\n</code></pre>\n<h5>CLI</h5>\n<p>See <a href=\"https://bitbucket.org/isysd/tech-js-node_modules-guld-user-cli\">guld-user-cli</a>.</p>\n<h3>License</h3>\n<p>MIT Copyright isysd</p>\n",
      "id": 45
    },
    {
      "path": "lib/keyring-gpg.md",
      "url": "lib/keyring-gpg.html",
      "content": "# keyring-gpg\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyring-gpg) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyring-gpg/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/keyring-gpg.html)\n\n[![node package manager](https://img.shields.io/npm/v/keyring-gpg.svg)](https://www.npmjs.com/package/keyring-gpg) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyring-gpg.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-keyring-gpg/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg?type=dev)\n\nGPG2 implementation for the keyring-interface.\n\n### Install\n\n##### Node\n\n```sh\nnpm i keyring-gpg\n```\n\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n",
      "html": "<h1>keyring-gpg</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyring-gpg\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyring-gpg/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/keyring-gpg.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/keyring-gpg\"><img src=\"https://img.shields.io/npm/v/keyring-gpg.svg\" alt=\"node package manager\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-keyring-gpg/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyring-gpg.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-gpg/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>GPG2 implementation for the keyring-interface.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i keyring-gpg\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 46
    },
    {
      "path": "lib/keyring-interface.md",
      "url": "lib/keyring-interface.html",
      "content": "# keyring-interface\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyring-interface) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyring-interface/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/keyring-interface.html)\n\n[![node package manager](https://img.shields.io/npm/v/keyring-interface.svg)](https://www.npmjs.com/package/keyring-interface) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-interface.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-interface?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyring-interface.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-keyring-interface/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface?type=dev)\n\nInterface for a generic keyring.\n\n### Install\n\n##### Node\n\n```sh\nnpm i keyring-interface\n```\n\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n",
      "html": "<h1>keyring-interface</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyring-interface\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyring-interface/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/keyring-interface.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/keyring-interface\"><img src=\"https://img.shields.io/npm/v/keyring-interface.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-interface?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-interface.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-keyring-interface/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyring-interface.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-interface/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Interface for a generic keyring.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i keyring-interface\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 47
    },
    {
      "path": "lib/keyring-pgp.md",
      "url": "lib/keyring-pgp.html",
      "content": "# keyring-pgp\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyring-pgp) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyring-pgp/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/keyring-pgp.html)\n\n[![node package manager](https://img.shields.io/npm/v/keyring-pgp.svg)](https://www.npmjs.com/package/keyring-pgp) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-pgp.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-pgp?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyring-pgp.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-keyring-pgp/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp?type=dev)\n\nPGP implementation for the keyring-interface.\n\n### Install\n\n##### Node\n\n```sh\nnpm i keyring-pgp\n```\n\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n",
      "html": "<h1>keyring-pgp</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyring-pgp\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyring-pgp/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/keyring-pgp.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/keyring-pgp\"><img src=\"https://img.shields.io/npm/v/keyring-pgp.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-pgp?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-keyring-pgp.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-keyring-pgp/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyring-pgp.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyring-pgp/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>PGP implementation for the keyring-interface.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i keyring-pgp\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 48
    },
    {
      "path": "lib/keyvaluedb.md",
      "url": "lib/keyvaluedb.html",
      "content": "# keyvaluedb\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyvaluedb) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-keyvaluedb/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/keyvaluedb.html)\n\n[![node package manager](https://img.shields.io/npm/v/keyvaluedb.svg)](https://www.npmjs.com/package/keyvaluedb) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-keyvaluedb.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-keyvaluedb?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyvaluedb.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-keyvaluedb/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb?type=dev)\n\nKey Value database middleware for node and the browser.\n\n### Install\n\n##### Node\n\n```sh\nnpm i keyvaluedb\n```\n\n### Usage\n\nEither a specific database class can be initialized, or the `defaultDB` function can be used to attempt to find a DB that works in your runtime environment.\n\n```\nconst { defaultDB, memoryDB, chromeStorageDB } = require('keyvaluedb')\nconst db = defaultDB()\nawait db.set('key', 'value')\nawait db.get('key') // value\nawait db.setMany({1: 1, 2: 2})\nawait db.getMany([1, 2]) // {1: 1, 2: 2}\n```\n\nThen you are free to make use of the promised based `get`, `set`, `setMany` and `getMany` functions. See tests for examples.\n\n##### Mixin\n\nTo use as an es6 class mixin, first use [object-to-class](https://bitbucket.org/isysd/object-to-class).\n\n```\nconst o2c = require('object-to-class')\nconst MemoryDB = o2c(memoryDB, 'MemoryDB')\nclass MyDB extends MemoryDB {}\nlet mydb = new MyDB()\nmydb instanceof MemoryDB // true\n```\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n",
      "html": "<h1>keyvaluedb</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyvaluedb\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-keyvaluedb/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/keyvaluedb.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/keyvaluedb\"><img src=\"https://img.shields.io/npm/v/keyvaluedb.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-keyvaluedb?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-keyvaluedb.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-keyvaluedb/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-keyvaluedb.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-keyvaluedb/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Key Value database middleware for node and the browser.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i keyvaluedb\n</code></pre>\n<h3>Usage</h3>\n<p>Either a specific database class can be initialized, or the <code>defaultDB</code> function can be used to attempt to find a DB that works in your runtime environment.</p>\n<pre><code>const { defaultDB, memoryDB, chromeStorageDB } = require('keyvaluedb')\nconst db = defaultDB()\nawait db.set('key', 'value')\nawait db.get('key') // value\nawait db.setMany({1: 1, 2: 2})\nawait db.getMany([1, 2]) // {1: 1, 2: 2}\n</code></pre>\n<p>Then you are free to make use of the promised based <code>get</code>, <code>set</code>, <code>setMany</code> and <code>getMany</code> functions. See tests for examples.</p>\n<h5>Mixin</h5>\n<p>To use as an es6 class mixin, first use <a href=\"https://bitbucket.org/isysd/object-to-class\">object-to-class</a>.</p>\n<pre><code>const o2c = require('object-to-class')\nconst MemoryDB = o2c(memoryDB, 'MemoryDB')\nclass MyDB extends MemoryDB {}\nlet mydb = new MyDB()\nmydb instanceof MemoryDB // true\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 49
    },
    {
      "path": "lib/ledger-types.md",
      "url": "lib/ledger-types.html",
      "content": "# ledger-types\n\n[![source](https://img.shields.io/badge/source-bitbucket-blue.svg)](https://bitbucket.org/guld/tech-js-node_modules-ledger-types) [![issues](https://img.shields.io/badge/issues-bitbucket-yellow.svg)](https://bitbucket.org/guld/tech-js-node_modules-ledger-types/issues) [![documentation](https://img.shields.io/badge/docs-guld.tech-green.svg)](https://guld.tech/lib/ledger-types.html)\n\n[![node package manager](https://img.shields.io/npm/v/ledger-types.svg)](https://www.npmjs.com/package/ledger-types) [![travis-ci](https://travis-ci.org/guldcoin/tech-js-node_modules-ledger-types.svg)](https://travis-ci.org/guldcoin/tech-js-node_modules-ledger-types?branch=guld) [![lgtm](https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-ledger-types.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/b/guld/tech-js-node_modules-ledger-types/context:javascript) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types/status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types) [![david-dm](https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types/dev-status.svg)](https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types?type=dev)\n\nJavascript types for [ledger-cli](https://ledger-cli.org) data, using decimal.js for numbers.\n\n### Install\n\n##### Node\n\n```sh\nnpm i ledger-types\n```\n\n##### Browser\n\n```sh\ncurl https///bitbucket.org/guld/tech-js-node_modules-ledger-types/raw/guld/./ledger-types.min.js -o ./ledger-types.min.js\n```\n\n\n### License\n\nMIT Copyright isysd <public@iramiller.com>\n",
      "html": "<h1>ledger-types</h1>\n<p><a href=\"https://bitbucket.org/guld/tech-js-node_modules-ledger-types\"><img src=\"https://img.shields.io/badge/source-bitbucket-blue.svg\" alt=\"source\"></a> <a href=\"https://bitbucket.org/guld/tech-js-node_modules-ledger-types/issues\"><img src=\"https://img.shields.io/badge/issues-bitbucket-yellow.svg\" alt=\"issues\"></a> <a href=\"https://guld.tech/lib/ledger-types.html\"><img src=\"https://img.shields.io/badge/docs-guld.tech-green.svg\" alt=\"documentation\"></a></p>\n<p><a href=\"https://www.npmjs.com/package/ledger-types\"><img src=\"https://img.shields.io/npm/v/ledger-types.svg\" alt=\"node package manager\"></a> <a href=\"https://travis-ci.org/guldcoin/tech-js-node_modules-ledger-types?branch=guld\"><img src=\"https://travis-ci.org/guldcoin/tech-js-node_modules-ledger-types.svg\" alt=\"travis-ci\"></a> <a href=\"https://lgtm.com/projects/b/guld/tech-js-node_modules-ledger-types/context:javascript\"><img src=\"https://img.shields.io/lgtm/grade/javascript/b/guld/tech-js-node_modules-ledger-types.svg?logo=lgtm&amp;logoWidth=18\" alt=\"lgtm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types/status.svg\" alt=\"david-dm\"></a> <a href=\"https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types?type=dev\"><img src=\"https://david-dm.org/guldcoin/tech-js-node_modules-ledger-types/dev-status.svg\" alt=\"david-dm\"></a></p>\n<p>Javascript types for <a href=\"https://ledger-cli.org\">ledger-cli</a> data, using decimal.js for numbers.</p>\n<h3>Install</h3>\n<h5>Node</h5>\n<pre><code class=\"language-sh\">npm i ledger-types\n</code></pre>\n<h5>Browser</h5>\n<pre><code class=\"language-sh\">curl https///bitbucket.org/guld/tech-js-node_modules-ledger-types/raw/guld/./ledger-types.min.js -o ./ledger-types.min.js\n</code></pre>\n<h3>License</h3>\n<p>MIT Copyright isysd <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n",
      "id": 50
    },
    {
      "path": "papers/guld-dapp-architecture.md",
      "url": "papers/guld-dapp-architecture.html",
      "content": "# Architecture for a guld DAPP \n\nThe general strategy we will recommend for developing guld DAPPs is to clone a selection of branches of the blocktree into the browser's storage. The DAPP will then be able to read, analyze and transform the data in it's raw form, as well as use modern web development tools for the UI.\n\nAs a reminder, the blocktree directory structure is:\n\n| local path | description |\n|------------|-----------------------------|\n| `/BLOCKTREE/<user>` | User's branch of the blocktree, as a dirty, local git repository. |\n| `~/ledger/<code>` | User's perspective on the ledger for commodity `<code>` |\n| `~/keys/pgp/<username>/<fpr>.asc` | PGP public keys, sorted by username then fingerprint. |\n| `~/devices/<username>/<devicename>/etc/hosts` | Official device config file, as signed by device owner. |\n| `~/tech/<lang>` | Source code sorted by language. |\n| `~/.password-store` | Standard Unix Password Manager data directory. Contents PGP encrypted. |\n| `~/blocktree/<username>` | Owner's perspective on another blocktree branch (individual or group) |\n\n## Pre-requisites\n\nThere are three big pre-requisites for any guld DAPP: pgp, git, and ledger. For guld games, we had to make all three available in the browser environment, which adds two important restrictions: Javascript, and sandboxed access to resources like the filesystem and local programs.\n\n### PGP\n\nThankfully, Javascript has a full, audited implementation of OpenPGP called [OpenPGP.js](https://openpgpjs.org/). Since the implementation is quite complete, this library even supports OpenPGP devices like smart cards and hardware wallets.\n\n### Git\n\nFor git, the Javascript option are not as complete or robust. Of the native jS (no API to system git) options, most do not have PGP signing functionality implemented, and additionally most are not built with the browser environment in mind.\n\n[Isomorphic-git](https://isomorphic-git.github.io/) is a new implementation, however, which already meets all of our needs, and is on it's way to becoming the best, most complete JS implementation of git. It works in the browser, and implements PGP commit signing and verification.\n\n### Ledger\n\nLedger is required to consume accounting data, and there is no Javascript implementation. In fact, there are few JS tools related to ledger, and most are poorly maintained. On the other hand, the original ledger-cli implementation runs well on Windows, Linux and Mac, and is very stable.\n\nThe recommended method for consuming ledger data from a guld DAPP is using the [ledger-native](https://github.com/guldcoin/ledger-native) bindings, which implement chrome's [native messaging API](https://developer.chrome.com/apps/nativeMessaging). These bindings come with installation instructions for the operating systems listed above, and allow generic access to the system's installed ledger.\n\n``` Javascript\nchrome.runtime.sendNativeMessage('com.guld.ledger',\n  {'cmd': 'bal', 'stdin': ledgerdata},\n  response => {\n      console.log(response)\n  }\n)\n```\n\n## Useful additions\n\n### BrowserFS\n\n[BrowserFS](https://github.com/jvilk/BrowserFS) \"emulates the nodejs filesystem API.\" Immediately, this lets us stage our git repositories in browser memory or storage, and interact with them in the normal git fashion. Isomorphic-git provides this sort of API, and is `fs` agnostic, happily accepting BrowserFS instances.\n\nIn the long term, a guldFS backend could be written for BrowserFS, allowing more seemless and native integration with the blocktree.\n\n## The guld JS library\n\nThe guld JS library uses the above tools to implement the required functionality of guld-ledger and the guld group.\n\n + Name registration\n + Key management\n + Ledger transaction templates for transfer, grant, and register\n\n## Your DAPP library\n\nThe primary contract for your DAPP should be implemented as a separate library. This makes code audits and interaction easy to separate from UI. For example, you should have an agreement like [this one](https://github.com/guld-games/Documents/blob/master/contracts/gg-agreement.md) for [guld games](https://guld.gg). This agreement should define your overall group concensus rules, as well as allowed transformations to the group's data.\n\nIf your group has a ledger, custom transaction templates can be defined to suppliment those made availale in the guld JS lib.\n\n## Your DAPP UI\n\nFinally, you can import all of the above and get to work on the frontend. From here on out it is standard web development, with the understanding that the above tools should be used to replace any server.\n",
      "html": "<h1>Architecture for a guld DAPP</h1>\n<p>The general strategy we will recommend for developing guld DAPPs is to clone a selection of branches of the blocktree into the browser’s storage. The DAPP will then be able to read, analyze and transform the data in it’s raw form, as well as use modern web development tools for the UI.</p>\n<p>As a reminder, the blocktree directory structure is:</p>\n<table>\n<thead>\n<tr>\n<th>local path</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>/BLOCKTREE/&lt;user&gt;</code></td>\n<td>User’s branch of the blocktree, as a dirty, local git repository.</td>\n</tr>\n<tr>\n<td><code>~/ledger/&lt;code&gt;</code></td>\n<td>User’s perspective on the ledger for commodity <code>&lt;code&gt;</code></td>\n</tr>\n<tr>\n<td><code>~/keys/pgp/&lt;username&gt;/&lt;fpr&gt;.asc</code></td>\n<td>PGP public keys, sorted by username then fingerprint.</td>\n</tr>\n<tr>\n<td><code>~/devices/&lt;username&gt;/&lt;devicename&gt;/etc/hosts</code></td>\n<td>Official device config file, as signed by device owner.</td>\n</tr>\n<tr>\n<td><code>~/tech/&lt;lang&gt;</code></td>\n<td>Source code sorted by language.</td>\n</tr>\n<tr>\n<td><code>~/.password-store</code></td>\n<td>Standard Unix Password Manager data directory. Contents PGP encrypted.</td>\n</tr>\n<tr>\n<td><code>~/blocktree/&lt;username&gt;</code></td>\n<td>Owner’s perspective on another blocktree branch (individual or group)</td>\n</tr>\n</tbody>\n</table>\n<h2>Pre-requisites</h2>\n<p>There are three big pre-requisites for any guld DAPP: pgp, git, and ledger. For guld games, we had to make all three available in the browser environment, which adds two important restrictions: Javascript, and sandboxed access to resources like the filesystem and local programs.</p>\n<h3>PGP</h3>\n<p>Thankfully, Javascript has a full, audited implementation of OpenPGP called <a href=\"https://openpgpjs.org/\">OpenPGP.js</a>. Since the implementation is quite complete, this library even supports OpenPGP devices like smart cards and hardware wallets.</p>\n<h3>Git</h3>\n<p>For git, the Javascript option are not as complete or robust. Of the native jS (no API to system git) options, most do not have PGP signing functionality implemented, and additionally most are not built with the browser environment in mind.</p>\n<p><a href=\"https://isomorphic-git.github.io/\">Isomorphic-git</a> is a new implementation, however, which already meets all of our needs, and is on it’s way to becoming the best, most complete JS implementation of git. It works in the browser, and implements PGP commit signing and verification.</p>\n<h3>Ledger</h3>\n<p>Ledger is required to consume accounting data, and there is no Javascript implementation. In fact, there are few JS tools related to ledger, and most are poorly maintained. On the other hand, the original ledger-cli implementation runs well on Windows, Linux and Mac, and is very stable.</p>\n<p>The recommended method for consuming ledger data from a guld DAPP is using the <a href=\"https://github.com/guldcoin/ledger-native\">ledger-native</a> bindings, which implement chrome’s <a href=\"https://developer.chrome.com/apps/nativeMessaging\">native messaging API</a>. These bindings come with installation instructions for the operating systems listed above, and allow generic access to the system’s installed ledger.</p>\n<pre><code class=\"language-Javascript\">chrome.runtime.sendNativeMessage('com.guld.ledger',\n  {'cmd': 'bal', 'stdin': ledgerdata},\n  response =&gt; {\n      console.log(response)\n  }\n)\n</code></pre>\n<h2>Useful additions</h2>\n<h3>BrowserFS</h3>\n<p><a href=\"https://github.com/jvilk/BrowserFS\">BrowserFS</a> “emulates the nodejs filesystem API.” Immediately, this lets us stage our git repositories in browser memory or storage, and interact with them in the normal git fashion. Isomorphic-git provides this sort of API, and is <code>fs</code> agnostic, happily accepting BrowserFS instances.</p>\n<p>In the long term, a guldFS backend could be written for BrowserFS, allowing more seemless and native integration with the blocktree.</p>\n<h2>The guld JS library</h2>\n<p>The guld JS library uses the above tools to implement the required functionality of guld-ledger and the guld group.</p>\n<ul>\n<li>Name registration</li>\n<li>Key management</li>\n<li>Ledger transaction templates for transfer, grant, and register</li>\n</ul>\n<h2>Your DAPP library</h2>\n<p>The primary contract for your DAPP should be implemented as a separate library. This makes code audits and interaction easy to separate from UI. For example, you should have an agreement like <a href=\"https://github.com/guld-games/Documents/blob/master/contracts/gg-agreement.md\">this one</a> for <a href=\"https://guld.gg\">guld games</a>. This agreement should define your overall group concensus rules, as well as allowed transformations to the group’s data.</p>\n<p>If your group has a ledger, custom transaction templates can be defined to suppliment those made availale in the guld JS lib.</p>\n<h2>Your DAPP UI</h2>\n<p>Finally, you can import all of the above and get to work on the frontend. From here on out it is standard web development, with the understanding that the above tools should be used to replace any server.</p>\n",
      "id": 51
    },
    {
      "path": "papers/guld-whitepaper.md",
      "url": "papers/guld-whitepaper.html",
      "content": "# Guld: Universal Protocol for Relative Consensus\n\nAuthor: Ira Miller aka isysd &lt;[public@iramiller.com](mailto:public@iramiller.com)&gt; [iramiller.com](https://iramiller.com)\n\n##### Abstract\n\nA polytree with signed, typed, symmetrical nodes can be used to represent, record, compare, and perform operations on individual and group perspectives on any topic describable in a digitized record. This `blocktree` would then represent a virtual universe for the participants, including natural causality and one-directional \"time\". The participants would be able to make assertions about each other's perspectives, building proofs of consensus or dissent. Using existing technologies like git, pgp, and ssh such a polytree can be constructed in a timely and accessible manner, while maintaining scalability and decentralization at the protocol level.\n\n### Introduction\n\nSince Bitcoin(1) introduced the blockchain concept in 2009, hundreds of experimental technologies have been developed to help users achieve consensus on one topic or another. The majority of these have been organized around the model of a central, unbranching trunk of absolute truth, i.e. a blockchain. To \"fork\" a blockchain, is perceived as negative, because it breaks the implicit or explicit contract of absolute truth that formed the chain.\n\nPerhaps due to their unforkability, blockchains have proved inflexible at managing conflict and change. Though Turing complete contract systems have been created(2), these have so far been insufficient to address the problem of the Firm(3), let alone the Government(4). This restricts blockchains to the realm of prices and payment systems, and outside of the firm.(5)\n\nA relativistic blocktree of perspectives would be a much more flexible and powerful platform for propagation of information in contracts, communities, firms, and governments. Such trees operate on abstract beliefs and observations to create causal relationships between nodes, and allow efficient proofs.(6)\n\n### Individual Observers\n\n\"I think, therefore I am\"(7) is a beautiful and strong proof, but it only works for the observer himself. A modernization using asymmetric cryptography would be \"I sign a unique perspective using this key, therefore I am.\"\n\nTo show the distinction, lets consider the case of Rene Descartes, the author of the original quote. Was he real, or is he a figment of your/my dreams? Even he would admit that we have insufficient evidence to prove the former. But consider, what if he had generated an asymmetrical keypair using an algorithm such as RSA, not invented until 1983.(8) Suppose he had somehow signed his book, publishing it with his public key in an appendix. Would he not then be able to provide a signature upon request proving that he is the same person that observed the original proof? Suppose he had somehow passed the private key down through the generations of his family to today, without it's secret being revealed publicly. Would not his heir be able to provide proof to us, even today of the relationship between the key and the work? This inherited key perspective would not be ideal, but it would be sufficient proof even for M. Descartes to accept.\n\nIs the key alone sufficient proof to accept a new `life`? Surely not, because the key is an inanimate math phenomenon that exists in nature. A thought which provably could not have come from yourself must, however, be evidence of some other thinker. Multiple thoughts signed by that same key indicate a strong pattern that the signer is the thinker. Daily use of the key in the pattern of the thinker's life make it almost certain.\n\nSo, let us define a `life` (in `blocktree` terminology) as an entity capable of generating an asymmetrical keypair, and using it to publish a unique perspective. This proof is still relative, but now it is relative to a second party, the observer of the thinker. This process can then build, by the thinker publishing their perspective on the original observer, each able to make provable assertions about the other's perspective, and the state of their network.(5)\n\n##### Proof of Labor (Observation)\n\n1. Rene signs & publishes unique thought A, along with public key RDKey\n2. Observer validates signature of RDKey.\n3. Observer decides on uniqueness of thought A as proof of a living perspective.\n4. If Observer accepts thought A as unique, Observer can safely infer that the signer Rene using key RDKey is also alive.\n\n### Perspectives (tree nodes)\n\nThe blocktree requires a data type for any observer's perspective, which make up primary nodes in the polytree. In practice, a plain text data type like JSON should be used, but abstractly, the perspective can be thought of as a decision tree. That is, each node inside the perspective asks a boolean question.\n\nThe simplest and smallest perspective would be Descartes's \"I think, therefore I am\", where his thought is his public key.\n\n| path | question |\n|------|----------|\n| `life` | Is the record a `life` as defined by PoL? |\n| `life/Rene` | Is the record the signer known as `Rene`, who uses key `RDKey`? |\n| `keys` | Is the record an ascii armored PGP public key? |\n| `keys/RDKey` | Is the record the key known as RDKey? |\n\nThe entries are either the raw contents that answer the question, or a git submodule linking to said contents. In the case of category nodes, like `keys`, the raw contents may be a directory, which in git, is just a path to a hashable object.\n\n![blocktree-descartes](/img/blocktree-descartes.jpg)\n\nThe 'life/Rene' case is more complex. What is Rene? In the git tree, it is a submodule, referencing the HEAD commit of the parent perspective. More subtle, though, Rene is the pattern of observations that are always signed using `RDKey`. To help us recognize this, Rene keeps all of these observations in the agreed upon perspective taxonomy, at his dedicated namespace in the tree, `life/Rene`.\n\nSince observers recognize each other, the blocktree is symmetrical, and potentially contains an infinite number of perspective branches. Though observers can use different formats for their perspectives, this disrupts the functionality of the blocktree, as relationships only develop through provable consensus, i.e. symmetry. So Rene must use the conventional perspective taxonomy, or certainly miscommunicate.\n\nAssume there is another rational entity Baruch Spinoza, who performs a similar self-proof using BSKey. The two would not necessarily see each other at first, and would be in self-contained perspective loops. The perspectives would be symmetrical, and easily comparable, however, should any outside observer read them both.\n\n![blocktree-spinoza](/img/blocktree-spinoza.jpg)\n\n### The Blocktree\n\nThe blocktree itself is a combination of many perspective nodes. In the guld software, each perspective node will be a git repository, and the links between perspective nodes are git submodules.(9) Since submodules are not the complete contents, but rather a SHA1 hash, this maintains both the privacy of the hashee and the disk space of the hasher.\n\nBaruch could read Rene's theory, and observe that RDKey was still in active use. Baruch would therefore update his tree by referencing Rene, and RDKey in their respective places. This would yield a self-similar, predictable and organized tree. Baruch could make basic assertions about Rene's perspective, such as \"Rene believes he exists.\" Rene would not necessarily accept any premise of Baruch's, but would be able to prove \"Baruch believes Rene exists\".\n\n![blocktree-descartes-seen](/img/blocktree-descartes-seen.jpg)\n\nNext, let's assume there is a two way communication between Rene and Baruch. Rene sees that Baruch has recognized his work, and reciprocates, also yielding identical hashes for `life`, and `keys`. The two have achieved consensus.\n\nThe simplest state of consensus is a symmetric equilibrium of proven existence between two parties. That is, both parties have shared public keys, and proven to each other their sentience with a unique thought. In git practice, an additional step of merging trees may be necessary, but that's procedural.\n\n![blocktree-descartes-friend](/img/blocktree-descartes-friend.jpg)\n\nWhen in a state of absolute consensus, as shown above, this tree is one level of perspective nodes deep, but n rows wide, where n is the number of unique observers. In git terms, every submodule in the `life` directory would point back to the parent repository.\n\nWhen there is disagreement, each `life` node may represent one or more branch points. The topography of this branching creates a control surface to be manipulated. For instance, suppose the branching is on the topic of 3d shapes. Their trees would overlap in some areas, differ in the area of shapes, and each contain at least a reference to the other.\n\n![blocktree-shapes-disagree](/img/blocktree-shapes-disagree.jpg)\n\nThough Rene does not himself recognize the `cube` as a shape, he would be able to reference it using Baruch's definition, and vice versa for Baruch and the `cylinder`. Either could provably assert that the other believed in such a foreign thing, referencing the other's definition.\n\n### Communities\n\nSuppose that Rene and Baruch talk it out, and come to consensus on the subject of shapes. They're so excited about finally reaching accord, that they decide to form a philosopher's club based on the subject, `ClubPhil`.\n\nSuppose `ClubPhil` is based on a mutually exclusive charter that said \"all members must always agree on the subject of shapes\". The members of `ClubPhil` agree to each keep a copy of the official perspective for the community, including any unanimously recognized shapes, keys, and lives aka members. This perspective will be named `ClubPhil`, and live in the `ClubPhil` branch of the community clone that each user has locally.\n\n![blocktree-clubphil](/img/blocktree-clubphil.jpg)\n\nEach member of the community would be able to prove at any time the perspective of any other on any record, including the contractual shapes, and the charter. If any member was to recognize a foreign shape, for instance, the others would be able to prove breach of the `ClubPhil` charter.\n\nThen let `community` in the `blocktree` be defined as an agreement between mutually recognized `life`s to publish a combined perspective.\n\n##### Co-signing aka Voting\n\nHow then would the `ClubPhil` community progress? What would happen if one day Rene discovered the `bevel`? Based on their charter, another argument, followed by a community fork or a unanimous update. A more sophisticated contract could be written with some effort, that would take into account the process of debate, creating a state machine for the community. Debates would take place on member branches, and only be merged into the community branch upon reaching a threshold of approval.\n\nBecause the community's state will be hashed into each user's perspective at each event the user observes, each user creates a constantly affirmed feed of their perspective on the state of the community and all relevant records. Since each record is behind a `git` submodule, it only takes up the space of a hash. Furthermore, since `git` only tracks changes, only the changed references need be considered or stored in each commit block.\n\nTherefore, counting \"votes\" on a community issue is trivial. Simply run the \"x believes y\" proof for each member x on the topic y. If the pre-arranged community threshold (i.e. 50%, 100%) for merging has been met, every member knows to merge topic y into the community consensus branch.\n\nDifferent weights can be given to member votes within a community, or even special roles and responsibilities. Since the basics of counting and tracking states do not change, these decisions will be left up to community developers.\n\n### Finance\n\nThe typical blockchain functionality of sequential, trustless transactions can be achieved by filing a ledger in a community branch of the blocktree. The community can manage the state of the ledger, in the same way that `ClubPhil` manages the shapes set.\n\nWhile such a ledger could theoretically use any format, plain text is most user friendly, and efficient in the chosen file system of git. It is therefore recommended to use `ledger-cli` for all blocktree ledgers.(10)\n\nThe `ledger-cli` format has very powerful unit control, including support completely custom commodity strings. Combined with the consensus a community can provide, this allows new digital tokens to be issued and controlled.\n\n```\n2017/06/7 ball4thegame\n  Assets:ball4thegame:Ambassador          1000 XGC\n  Equity:guld:Ambassador              -1000 XGC\n```\n\n### Network\n\nThough the standard `git` software package ships with a server, and that server supports p2p `ssh` authentication, this is rarely made use of. In practice, users tend to use one of the popular hosting services, such as [github](http://github.com), [bitbucket](http://bitbucket.org),  [gitlab](http://gitlab.com), etc.. One of these is more than sufficient for the average open source project, but not for a consensus network. Thankfully, git supports a multiple `remote` hosts for each repository, and the protocol strengthens the user's signed ownership of the state, making each inter-changeable.\n\n``` bash\n$ git remote -v\nisysd    git@guld.host:isysd/guld.git (fetch)\nisysd    git@guld.host:isysd/guld.git (push)\nisysd-github    git@github.com:isysd/guld.git (fetch)\nisysd-github    git@github.com:isysd/guld.git (push)\nisysd-bitbucket    git@bitbucket.org:isysd/guld.git (fetch)\nisysd-bitbucket    git@bitbucket.org:isysd/guld.git (push)\ncindy-zimmerman    git@guld.host:cindy-zimmerman/guld.git (fetch)\ncindy-zimmerman    git@guld.host:cindy-zimmerman/guld.git (push)\n```\n\nBecause we recognize that `isysd` is a living person who uses a specific PGP key to publish to one or all of the `isysd*` mirrors shown, we can accept the most up to date with his signed commits. The hosts are not to be trusted. Logistically, checking all of these is inefficient, so users should establish P2P socket connections with their friends to send notifications about commits and hosts.\n\nAny mutually accepted users of the protocol could publish encrypted contact info for each other, including IP addresses for git hosts and live socket sessions. Ideally, each user on the network would host their own `git` servers, using software like gitolite(11) to manage permissions in repository, and publishing their IP address (selectively encrypted) all on the blocktree.\n\n__Example Gitolite configuration__\n\n```\n@users = u1 u2 u3\n\nrepo foo/CREATOR/[a-z]..*\n    C   =   u1 u2 u3\n    RW+ =   CREATOR\n    RW  =   WRITERS\n    R   =   READERS\n```\n\nThis would create a provable hosting service, where the host can demonstrate compliance with community access rules, and even put the configuration itself in the control of one or more signing users.\n\nRunning `git` and `ssh` servers is an, as yet, under-assessed security risk to request of end users. Until there is are lots of data from experienced systems administrators, and the protocol has stabilized, end users should not be required to host their own repositories.\n\nStarting with professional, trustless hosting services, the guld network will evolve to proven hosts, finally to a completely p2p, self-hosted network.\n\nThis evolution will separate guld more and more from traditional infrastructure like Dynamic Name Servers (DNS), gradually reshaping the internet on P2P terms, with P2P identities, governance, and finances built in.\n\n### Conclusion\n\nThe `blocktree` represents a rich, self-contained world, with causality and enforceable laws for it's participants. By using relative proofs based on perspectives, relative truths and consensus can be reached, lost, and reachieved flexibly, in ways that blockchains are unable to replicate. This blocktree of relative truth, or truth good enough for a community, is superior to blockchains of absolute truth for human contracts, firms, and governments.\n\n### References\n\n + [1](https://bitcoin.org/bitcoin.pdf) Satoshi Nakamoto \"Bitcoin\" (2009)\n\n + [2](https://github.com/ethereum/wiki/wiki/White-Paper) Vitalik Buterin et al \"Ethereum\" (2014)\n\n + [3](https://blog.slock.it/the-history-of-the-dao-and-lessons-learned-d06740f8cfa5) Christoph Jentzsch \"The History of The DAO and Lessons Learned\"\n\n + [4](https://en.bitcoin.it/wiki/Block_size_limit_controversy) The block size controversy entry on the bitcoin wiki.\n\n + [5] R. H. COASE \"The Nature of the Firm\" (1937)\n\n + [6](http://www.ijcai.org/Proceedings/83-1/Papers/041.pdf) Jin H. Kim and Judea Pearl \"A COMPUTATIONAL MODEL FOR CAUSAL AND DIAGNOSTIC REASONING IN INFERENCE SYSTEMS\"\n\n + [7] Rene Descartes \"A Discourse on Method\" (1637) translated by John Veitch (2008)\n\n + [8] Rivest, Shamir, Adleman \"Cryptographic communications system and method\" (1983)\n\n + [9] Linus Torvalds, Junio Hamano et all \"git\" (2005-)\n\n + [10](http://ledger-cli.org/) John Wiegley et all \"Ledger-cli\" (2003-)\n\n + [11](http://gitolite.com/gitolite/wild/) Sitaram Chamarty \"gitolite\" (2012-)\n",
      "html": "<h1>Guld: Universal Protocol for Relative Consensus</h1>\n<p>Author: Ira Miller aka isysd &lt;<a href=\"mailto:public@iramiller.com\">public@iramiller.com</a>&gt; <a href=\"https://iramiller.com\">iramiller.com</a></p>\n<h5>Abstract</h5>\n<p>A polytree with signed, typed, symmetrical nodes can be used to represent, record, compare, and perform operations on individual and group perspectives on any topic describable in a digitized record. This <code>blocktree</code> would then represent a virtual universe for the participants, including natural causality and one-directional “time”. The participants would be able to make assertions about each other’s perspectives, building proofs of consensus or dissent. Using existing technologies like git, pgp, and ssh such a polytree can be constructed in a timely and accessible manner, while maintaining scalability and decentralization at the protocol level.</p>\n<h3>Introduction</h3>\n<p>Since Bitcoin(1) introduced the blockchain concept in 2009, hundreds of experimental technologies have been developed to help users achieve consensus on one topic or another. The majority of these have been organized around the model of a central, unbranching trunk of absolute truth, i.e. a blockchain. To “fork” a blockchain, is perceived as negative, because it breaks the implicit or explicit contract of absolute truth that formed the chain.</p>\n<p>Perhaps due to their unforkability, blockchains have proved inflexible at managing conflict and change. Though Turing complete contract systems have been created(2), these have so far been insufficient to address the problem of the Firm(3), let alone the Government(4). This restricts blockchains to the realm of prices and payment systems, and outside of the firm.(5)</p>\n<p>A relativistic blocktree of perspectives would be a much more flexible and powerful platform for propagation of information in contracts, communities, firms, and governments. Such trees operate on abstract beliefs and observations to create causal relationships between nodes, and allow efficient proofs.(6)</p>\n<h3>Individual Observers</h3>\n<p>“I think, therefore I am”(7) is a beautiful and strong proof, but it only works for the observer himself. A modernization using asymmetric cryptography would be “I sign a unique perspective using this key, therefore I am.”</p>\n<p>To show the distinction, lets consider the case of Rene Descartes, the author of the original quote. Was he real, or is he a figment of your/my dreams? Even he would admit that we have insufficient evidence to prove the former. But consider, what if he had generated an asymmetrical keypair using an algorithm such as RSA, not invented until 1983.(8) Suppose he had somehow signed his book, publishing it with his public key in an appendix. Would he not then be able to provide a signature upon request proving that he is the same person that observed the original proof? Suppose he had somehow passed the private key down through the generations of his family to today, without it’s secret being revealed publicly. Would not his heir be able to provide proof to us, even today of the relationship between the key and the work? This inherited key perspective would not be ideal, but it would be sufficient proof even for M. Descartes to accept.</p>\n<p>Is the key alone sufficient proof to accept a new <code>life</code>? Surely not, because the key is an inanimate math phenomenon that exists in nature. A thought which provably could not have come from yourself must, however, be evidence of some other thinker. Multiple thoughts signed by that same key indicate a strong pattern that the signer is the thinker. Daily use of the key in the pattern of the thinker’s life make it almost certain.</p>\n<p>So, let us define a <code>life</code> (in <code>blocktree</code> terminology) as an entity capable of generating an asymmetrical keypair, and using it to publish a unique perspective. This proof is still relative, but now it is relative to a second party, the observer of the thinker. This process can then build, by the thinker publishing their perspective on the original observer, each able to make provable assertions about the other’s perspective, and the state of their network.(5)</p>\n<h5>Proof of Labor (Observation)</h5>\n<ol>\n<li>Rene signs &amp; publishes unique thought A, along with public key RDKey</li>\n<li>Observer validates signature of RDKey.</li>\n<li>Observer decides on uniqueness of thought A as proof of a living perspective.</li>\n<li>If Observer accepts thought A as unique, Observer can safely infer that the signer Rene using key RDKey is also alive.</li>\n</ol>\n<h3>Perspectives (tree nodes)</h3>\n<p>The blocktree requires a data type for any observer’s perspective, which make up primary nodes in the polytree. In practice, a plain text data type like JSON should be used, but abstractly, the perspective can be thought of as a decision tree. That is, each node inside the perspective asks a boolean question.</p>\n<p>The simplest and smallest perspective would be Descartes’s “I think, therefore I am”, where his thought is his public key.</p>\n<table>\n<thead>\n<tr>\n<th>path</th>\n<th>question</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>life</code></td>\n<td>Is the record a <code>life</code> as defined by PoL?</td>\n</tr>\n<tr>\n<td><code>life/Rene</code></td>\n<td>Is the record the signer known as <code>Rene</code>, who uses key <code>RDKey</code>?</td>\n</tr>\n<tr>\n<td><code>keys</code></td>\n<td>Is the record an ascii armored PGP public key?</td>\n</tr>\n<tr>\n<td><code>keys/RDKey</code></td>\n<td>Is the record the key known as RDKey?</td>\n</tr>\n</tbody>\n</table>\n<p>The entries are either the raw contents that answer the question, or a git submodule linking to said contents. In the case of category nodes, like <code>keys</code>, the raw contents may be a directory, which in git, is just a path to a hashable object.</p>\n<p><img src=\"/img/blocktree-descartes.jpg\" alt=\"blocktree-descartes\"></p>\n<p>The ‘life/Rene’ case is more complex. What is Rene? In the git tree, it is a submodule, referencing the HEAD commit of the parent perspective. More subtle, though, Rene is the pattern of observations that are always signed using <code>RDKey</code>. To help us recognize this, Rene keeps all of these observations in the agreed upon perspective taxonomy, at his dedicated namespace in the tree, <code>life/Rene</code>.</p>\n<p>Since observers recognize each other, the blocktree is symmetrical, and potentially contains an infinite number of perspective branches. Though observers can use different formats for their perspectives, this disrupts the functionality of the blocktree, as relationships only develop through provable consensus, i.e. symmetry. So Rene must use the conventional perspective taxonomy, or certainly miscommunicate.</p>\n<p>Assume there is another rational entity Baruch Spinoza, who performs a similar self-proof using BSKey. The two would not necessarily see each other at first, and would be in self-contained perspective loops. The perspectives would be symmetrical, and easily comparable, however, should any outside observer read them both.</p>\n<p><img src=\"/img/blocktree-spinoza.jpg\" alt=\"blocktree-spinoza\"></p>\n<h3>The Blocktree</h3>\n<p>The blocktree itself is a combination of many perspective nodes. In the guld software, each perspective node will be a git repository, and the links between perspective nodes are git submodules.(9) Since submodules are not the complete contents, but rather a SHA1 hash, this maintains both the privacy of the hashee and the disk space of the hasher.</p>\n<p>Baruch could read Rene’s theory, and observe that RDKey was still in active use. Baruch would therefore update his tree by referencing Rene, and RDKey in their respective places. This would yield a self-similar, predictable and organized tree. Baruch could make basic assertions about Rene’s perspective, such as “Rene believes he exists.” Rene would not necessarily accept any premise of Baruch’s, but would be able to prove “Baruch believes Rene exists”.</p>\n<p><img src=\"/img/blocktree-descartes-seen.jpg\" alt=\"blocktree-descartes-seen\"></p>\n<p>Next, let’s assume there is a two way communication between Rene and Baruch. Rene sees that Baruch has recognized his work, and reciprocates, also yielding identical hashes for <code>life</code>, and <code>keys</code>. The two have achieved consensus.</p>\n<p>The simplest state of consensus is a symmetric equilibrium of proven existence between two parties. That is, both parties have shared public keys, and proven to each other their sentience with a unique thought. In git practice, an additional step of merging trees may be necessary, but that’s procedural.</p>\n<p><img src=\"/img/blocktree-descartes-friend.jpg\" alt=\"blocktree-descartes-friend\"></p>\n<p>When in a state of absolute consensus, as shown above, this tree is one level of perspective nodes deep, but n rows wide, where n is the number of unique observers. In git terms, every submodule in the <code>life</code> directory would point back to the parent repository.</p>\n<p>When there is disagreement, each <code>life</code> node may represent one or more branch points. The topography of this branching creates a control surface to be manipulated. For instance, suppose the branching is on the topic of 3d shapes. Their trees would overlap in some areas, differ in the area of shapes, and each contain at least a reference to the other.</p>\n<p><img src=\"/img/blocktree-shapes-disagree.jpg\" alt=\"blocktree-shapes-disagree\"></p>\n<p>Though Rene does not himself recognize the <code>cube</code> as a shape, he would be able to reference it using Baruch’s definition, and vice versa for Baruch and the <code>cylinder</code>. Either could provably assert that the other believed in such a foreign thing, referencing the other’s definition.</p>\n<h3>Communities</h3>\n<p>Suppose that Rene and Baruch talk it out, and come to consensus on the subject of shapes. They’re so excited about finally reaching accord, that they decide to form a philosopher’s club based on the subject, <code>ClubPhil</code>.</p>\n<p>Suppose <code>ClubPhil</code> is based on a mutually exclusive charter that said “all members must always agree on the subject of shapes”. The members of <code>ClubPhil</code> agree to each keep a copy of the official perspective for the community, including any unanimously recognized shapes, keys, and lives aka members. This perspective will be named <code>ClubPhil</code>, and live in the <code>ClubPhil</code> branch of the community clone that each user has locally.</p>\n<p><img src=\"/img/blocktree-clubphil.jpg\" alt=\"blocktree-clubphil\"></p>\n<p>Each member of the community would be able to prove at any time the perspective of any other on any record, including the contractual shapes, and the charter. If any member was to recognize a foreign shape, for instance, the others would be able to prove breach of the <code>ClubPhil</code> charter.</p>\n<p>Then let <code>community</code> in the <code>blocktree</code> be defined as an agreement between mutually recognized <code>life</code>s to publish a combined perspective.</p>\n<h5>Co-signing aka Voting</h5>\n<p>How then would the <code>ClubPhil</code> community progress? What would happen if one day Rene discovered the <code>bevel</code>? Based on their charter, another argument, followed by a community fork or a unanimous update. A more sophisticated contract could be written with some effort, that would take into account the process of debate, creating a state machine for the community. Debates would take place on member branches, and only be merged into the community branch upon reaching a threshold of approval.</p>\n<p>Because the community’s state will be hashed into each user’s perspective at each event the user observes, each user creates a constantly affirmed feed of their perspective on the state of the community and all relevant records. Since each record is behind a <code>git</code> submodule, it only takes up the space of a hash. Furthermore, since <code>git</code> only tracks changes, only the changed references need be considered or stored in each commit block.</p>\n<p>Therefore, counting “votes” on a community issue is trivial. Simply run the “x believes y” proof for each member x on the topic y. If the pre-arranged community threshold (i.e. 50%, 100%) for merging has been met, every member knows to merge topic y into the community consensus branch.</p>\n<p>Different weights can be given to member votes within a community, or even special roles and responsibilities. Since the basics of counting and tracking states do not change, these decisions will be left up to community developers.</p>\n<h3>Finance</h3>\n<p>The typical blockchain functionality of sequential, trustless transactions can be achieved by filing a ledger in a community branch of the blocktree. The community can manage the state of the ledger, in the same way that <code>ClubPhil</code> manages the shapes set.</p>\n<p>While such a ledger could theoretically use any format, plain text is most user friendly, and efficient in the chosen file system of git. It is therefore recommended to use <code>ledger-cli</code> for all blocktree ledgers.(10)</p>\n<p>The <code>ledger-cli</code> format has very powerful unit control, including support completely custom commodity strings. Combined with the consensus a community can provide, this allows new digital tokens to be issued and controlled.</p>\n<pre><code>2017/06/7 ball4thegame\n  Assets:ball4thegame:Ambassador          1000 XGC\n  Equity:guld:Ambassador              -1000 XGC\n</code></pre>\n<h3>Network</h3>\n<p>Though the standard <code>git</code> software package ships with a server, and that server supports p2p <code>ssh</code> authentication, this is rarely made use of. In practice, users tend to use one of the popular hosting services, such as <a href=\"http://github.com\">github</a>, <a href=\"http://bitbucket.org\">bitbucket</a>,  <a href=\"http://gitlab.com\">gitlab</a>, etc… One of these is more than sufficient for the average open source project, but not for a consensus network. Thankfully, git supports a multiple <code>remote</code> hosts for each repository, and the protocol strengthens the user’s signed ownership of the state, making each inter-changeable.</p>\n<pre><code class=\"language-bash\">$ git remote -v\nisysd    git@guld.host:isysd/guld.git (fetch)\nisysd    git@guld.host:isysd/guld.git (push)\nisysd-github    git@github.com:isysd/guld.git (fetch)\nisysd-github    git@github.com:isysd/guld.git (push)\nisysd-bitbucket    git@bitbucket.org:isysd/guld.git (fetch)\nisysd-bitbucket    git@bitbucket.org:isysd/guld.git (push)\ncindy-zimmerman    git@guld.host:cindy-zimmerman/guld.git (fetch)\ncindy-zimmerman    git@guld.host:cindy-zimmerman/guld.git (push)\n</code></pre>\n<p>Because we recognize that <code>isysd</code> is a living person who uses a specific PGP key to publish to one or all of the <code>isysd*</code> mirrors shown, we can accept the most up to date with his signed commits. The hosts are not to be trusted. Logistically, checking all of these is inefficient, so users should establish P2P socket connections with their friends to send notifications about commits and hosts.</p>\n<p>Any mutually accepted users of the protocol could publish encrypted contact info for each other, including IP addresses for git hosts and live socket sessions. Ideally, each user on the network would host their own <code>git</code> servers, using software like gitolite(11) to manage permissions in repository, and publishing their IP address (selectively encrypted) all on the blocktree.</p>\n<p><strong>Example Gitolite configuration</strong></p>\n<pre><code>@users = u1 u2 u3\n\nrepo foo/CREATOR/[a-z]..*\n    C   =   u1 u2 u3\n    RW+ =   CREATOR\n    RW  =   WRITERS\n    R   =   READERS\n</code></pre>\n<p>This would create a provable hosting service, where the host can demonstrate compliance with community access rules, and even put the configuration itself in the control of one or more signing users.</p>\n<p>Running <code>git</code> and <code>ssh</code> servers is an, as yet, under-assessed security risk to request of end users. Until there is are lots of data from experienced systems administrators, and the protocol has stabilized, end users should not be required to host their own repositories.</p>\n<p>Starting with professional, trustless hosting services, the guld network will evolve to proven hosts, finally to a completely p2p, self-hosted network.</p>\n<p>This evolution will separate guld more and more from traditional infrastructure like Dynamic Name Servers (DNS), gradually reshaping the internet on P2P terms, with P2P identities, governance, and finances built in.</p>\n<h3>Conclusion</h3>\n<p>The <code>blocktree</code> represents a rich, self-contained world, with causality and enforceable laws for it’s participants. By using relative proofs based on perspectives, relative truths and consensus can be reached, lost, and reachieved flexibly, in ways that blockchains are unable to replicate. This blocktree of relative truth, or truth good enough for a community, is superior to blockchains of absolute truth for human contracts, firms, and governments.</p>\n<h3>References</h3>\n<ul>\n<li>\n<p><a href=\"https://bitcoin.org/bitcoin.pdf\">1</a> Satoshi Nakamoto “Bitcoin” (2009)</p>\n</li>\n<li>\n<p><a href=\"https://github.com/ethereum/wiki/wiki/White-Paper\">2</a> Vitalik Buterin et al “Ethereum” (2014)</p>\n</li>\n<li>\n<p><a href=\"https://blog.slock.it/the-history-of-the-dao-and-lessons-learned-d06740f8cfa5\">3</a> Christoph Jentzsch “The History of The DAO and Lessons Learned”</p>\n</li>\n<li>\n<p><a href=\"https://en.bitcoin.it/wiki/Block_size_limit_controversy\">4</a> The block size controversy entry on the bitcoin wiki.</p>\n</li>\n<li>\n<p>[5] R. H. COASE “The Nature of the Firm” (1937)</p>\n</li>\n<li>\n<p><a href=\"http://www.ijcai.org/Proceedings/83-1/Papers/041.pdf\">6</a> Jin H. Kim and Judea Pearl “A COMPUTATIONAL MODEL FOR CAUSAL AND DIAGNOSTIC REASONING IN INFERENCE SYSTEMS”</p>\n</li>\n<li>\n<p>[7] Rene Descartes “A Discourse on Method” (1637) translated by John Veitch (2008)</p>\n</li>\n<li>\n<p>[8] Rivest, Shamir, Adleman “Cryptographic communications system and method” (1983)</p>\n</li>\n<li>\n<p>[9] Linus Torvalds, Junio Hamano et all “git” (2005-)</p>\n</li>\n<li>\n<p><a href=\"http://ledger-cli.org/\">10</a> John Wiegley et all “Ledger-cli” (2003-)</p>\n</li>\n<li>\n<p><a href=\"http://gitolite.com/gitolite/wild/\">11</a> Sitaram Chamarty “gitolite” (2012-)</p>\n</li>\n</ul>\n",
      "id": 52
    },
    {
      "path": "papers/guldFS_Specification.md",
      "url": "papers/guldFS_Specification.html",
      "content": "# guld FileSystem (guldFS) Specification\n\n**Author:** \n\nIra Miller <public@iramiller.com>\n\nLicense: CC-BY-4\n\nDRAFT\n\nv0.0.2 \n\n## Overview\n\nThe guld FileSystem (guldFS) is a distributed, signed, encryptable, and version controlled filesystem in user space. guldFS is designed to run in Linux using stable, open source components like git, GnuPG, bittorrent, and FUSE.\n\n## FUSE\n\nguldFS uses Filesystem in Userspace (FUSE) to create a native filesystem experience from the kernel level up.\n\nLocal users mount directories using fuse, and make changes like they would edit any other file. The changes are then passed through libfuse to the kernel, and then back out into the local git data directory.\n\nThe local git data directory should be kept in a “clean” state, in the fashion of a git server. Also following git server convention, this data should be managed by a system user named `git`.\n\n![Fuseguldfs](/img/Fuse_guldfs.jpg)\n\n## Local Git Server\n\nThe git server can act only as a local backup of user data, but it can also be configured to synchronize with third party git repositories. To manage the permissions, gitolite is the recommended server.\n\n[Gitolite](http://Gitolite.com) can be configured to allow limited secure shell (SSH) sessions by other users identified by their usernames and corresponding SSH keys.\n\nFor example, a group of users `family` could be given read-only access to all subdirectories of your pictures, but not to your work documents. Anyone authenticating themself with an SSH key known to be in the `family` group would be allowed to download a picture from you.\n\nThese remote users could be using plain old git repositories, or could also be running guldFS, allowing them to mount your pictures directories on their local system.\n\n![Localgitguldfs](/img/Localgitserver_guldfs.jpg)\n\n## Branches and Merging\n\nEach user will have a named branch for each git repository, so there should never be any ambiguity about which branch to checkout or commit to. The middleware can always commit to and pull from branch `isysd` for user `isysd`.\n\nEach repository should have a designated owner, who governs the contents. When the owner merges a commit, the rule is for all user branches to also merge. This process should be managed for all users and all repositories by a service running under the `git` user. Since only merges are to be performed by this service, it does not need an identity or signing key, and only needs write access to the clean copy of each repository.\n\n![branchesguldfs](/img/Branches%26Merging_guldfs.jpg)\n\nThe owner could be another user on the same local system, or it could be a remote user identified by username and SSH key. All that is required for consensus, and for merging, is that the official owner key(s) have signed the owner branch. Once the threshold of signatures is met, the commit(s) should be merged into all Reader branches.\n\n## guld Network\n\nThe guld network is peer to peer and split into two halves: messaging (metadata) and SSH (data). The messaging portion is a pub/sub 0MQ network, where each network node publishes known commit hashes. The SSH portion of the network is for retrieving and pushing the contents of each commit.\n\n![networkguldfs](/img/guldnetwork_guldfs.jpg)\n\nThe contents of the 0MQ messages should consist of `$user:$repository:$commit-hash`. Because the contents are not sent, and not recoverable based on the hash, these messages are safe to distribute all across the network in a `gossip` pool. The term gossip is used because the messages are not necessarily observed by the sending node, and neither node may be able to access the full contents that the message refers to. Should an interested and authorized user hear about the message however, he need only open an SSH connection to the user in the message, and request to pull down the commit hash.\n\n## Configuration\n\nEach repository should be configured using a version controlled file. The recommended name for this file is `.gap.ini`. The file must, at minimum, describe the path to the repository, and it’s official owner.\n\n``` .gap.ini example\n[guldfs]\npath = /isysd/pictures/family/\nowner = isysd\n```\n\nThis lets other users know the governance for the repository, and it’s address. This address can be used in local file structures (i.e. mounted at /home/isysd/pictures/family) but that is not required. It is, however, required to name the repository after this path in kebab case (i.e. isysd-pictures-family), and to use the path in all related network messages.\n\n### **_Additional Configuration_**\n\nFor additional security, and/or for large file support, it is recommended to use pre and post commit hooks to transform the commit contents. For example, the pre-commit hook might do something like encrypt the files using another user’s PGP key, create a torrent out of the encrypted files, and then commit the torrent to git, ignoring both the plaintext and encrypted files. The reader would have a post-commit hook that would do the reverse, opening the torrent, downloading the encrypted files, then decrypting them to finally access the plaintext file.\n\n![additionalconfigguldfs](/img/AdditionalConfiguration_guldfs.jpg)\n\nBecause git hooks are arbitrarily programmable, it is not necessary to describe every possible use case. The important thing is that each repository declare pre and post commit hooks in .gap.json, so that all members of that repository follow the same rules.\n\n``` .gap.ini example w/ hooks\n[guldfs]\npath = /isysd/pictures/family/\nowner = isysd\npre-commit = path/to/pre-commit.sh\npost-commit = path/to/post-commit.sh\n```\n\n### **_Mirror Local Filesystem Permissions_**\n\nUnix-based filesystems have a common permission scheme, broken into three categories: user, group, others. Each of these can have some combination of read (r), write (w), and execute (x) permissions. These same file permissions exist in guldFS, but are enforced through cryptography. This allows the files to be distributed on a network without compromising the access to any file or directory.\n\nThe enforcement of various combinations and file sizes requires a combination of pre and post commit hooks as described in the Additional Configuration section. \n\n**Hook Format Map**\n\n|Format|Min Users|Max Users|Torrent at Size|\n|:-----:|:------:|:-------:|:-------------:|\n|Plain text|1    |N/A      |10 MB          |\n|GPG Encrypt|1   |12       |10 MB          |\n|AES Encrypt|2   |N/A      |10 MB          |\n|Torrent|1       |N/A      |N/A            |\n\nDepending on how many users are in the group, and how large the file is, one or more hook rules may be in effect. For example, a large, private file for a group of 1 would be GPG encrypted. If a second user was to be added to the group with access to that large file, GPG would still be used, but the GPG encrypted version of the file would then also be torrented.\n\nThe guldFS fuse middleware should automatically determine which rules to apply in most cases, based on the table above. In the case where a user wishes to explicitly set additional rules for a directory, this can be done by editing the .gitignore file with markup properties. The syntax to turn on a rule for following lines is: `#guld:<rule1>[:<rule2…]`. For example, to turn on the GPG rule for all following files, add the line `#guld:gpg`. To also include torrenting, use `#guld:gpg:torrent`.\n\n**_File Permission Examples_**\n\n|       |User   |Group  |World |Properties|\n|---------|---------|---------|---------|---------|\n|/home/\\<user>/|6 (+rw)|4 (+r)|4 (+r)|write-check|\n|/home/\\<user>/tech|7 (+rwx)|5 (+rx)|5 +(r)|write-check|\n|/home/\\<user>/.password-store|6 (+rw)|4 (+r)|0|GPG, write-check|\n|/home/\\<user>/Pictures|6 (+rw)|4 (+r)|0|AES/GPG, write-check|\n|/home/\\<user>/Videos|6 (+rw)|4 (+r)|0|AES/GPG, Torrent, write-check|\n\nIn most of these real world examples, only the user has write permission, which needs to be checked. This is as simple as a post-pull hook gpg signature count. If the gpg signature doesn’t match the owner’s, delete the commit. Additionally, either the AES or GPG rule is applied depending on how large the group is, which is contextual. Finally, we make assumptions, like that Pictures are going to be small enough to not require torrenting, but that Videos will almost certainly require it.\n\n\n",
      "html": "<h1>guld FileSystem (guldFS) Specification</h1>\n<p><strong>Author:</strong></p>\n<p>Ira Miller <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n<p>License: CC-BY-4</p>\n<p>DRAFT</p>\n<p>v0.0.2</p>\n<h2>Overview</h2>\n<p>The guld FileSystem (guldFS) is a distributed, signed, encryptable, and version controlled filesystem in user space. guldFS is designed to run in Linux using stable, open source components like git, GnuPG, bittorrent, and FUSE.</p>\n<h2>FUSE</h2>\n<p>guldFS uses Filesystem in Userspace (FUSE) to create a native filesystem experience from the kernel level up.</p>\n<p>Local users mount directories using fuse, and make changes like they would edit any other file. The changes are then passed through libfuse to the kernel, and then back out into the local git data directory.</p>\n<p>The local git data directory should be kept in a “clean” state, in the fashion of a git server. Also following git server convention, this data should be managed by a system user named <code>git</code>.</p>\n<p><img src=\"/img/Fuse_guldfs.jpg\" alt=\"Fuseguldfs\"></p>\n<h2>Local Git Server</h2>\n<p>The git server can act only as a local backup of user data, but it can also be configured to synchronize with third party git repositories. To manage the permissions, gitolite is the recommended server.</p>\n<p><a href=\"http://Gitolite.com\">Gitolite</a> can be configured to allow limited secure shell (SSH) sessions by other users identified by their usernames and corresponding SSH keys.</p>\n<p>For example, a group of users <code>family</code> could be given read-only access to all subdirectories of your pictures, but not to your work documents. Anyone authenticating themself with an SSH key known to be in the <code>family</code> group would be allowed to download a picture from you.</p>\n<p>These remote users could be using plain old git repositories, or could also be running guldFS, allowing them to mount your pictures directories on their local system.</p>\n<p><img src=\"/img/Localgitserver_guldfs.jpg\" alt=\"Localgitguldfs\"></p>\n<h2>Branches and Merging</h2>\n<p>Each user will have a named branch for each git repository, so there should never be any ambiguity about which branch to checkout or commit to. The middleware can always commit to and pull from branch <code>isysd</code> for user <code>isysd</code>.</p>\n<p>Each repository should have a designated owner, who governs the contents. When the owner merges a commit, the rule is for all user branches to also merge. This process should be managed for all users and all repositories by a service running under the <code>git</code> user. Since only merges are to be performed by this service, it does not need an identity or signing key, and only needs write access to the clean copy of each repository.</p>\n<p><img src=\"/img/Branches%26Merging_guldfs.jpg\" alt=\"branchesguldfs\"></p>\n<p>The owner could be another user on the same local system, or it could be a remote user identified by username and SSH key. All that is required for consensus, and for merging, is that the official owner key(s) have signed the owner branch. Once the threshold of signatures is met, the commit(s) should be merged into all Reader branches.</p>\n<h2>guld Network</h2>\n<p>The guld network is peer to peer and split into two halves: messaging (metadata) and SSH (data). The messaging portion is a pub/sub 0MQ network, where each network node publishes known commit hashes. The SSH portion of the network is for retrieving and pushing the contents of each commit.</p>\n<p><img src=\"/img/guldnetwork_guldfs.jpg\" alt=\"networkguldfs\"></p>\n<p>The contents of the 0MQ messages should consist of <code>$user:$repository:$commit-hash</code>. Because the contents are not sent, and not recoverable based on the hash, these messages are safe to distribute all across the network in a <code>gossip</code> pool. The term gossip is used because the messages are not necessarily observed by the sending node, and neither node may be able to access the full contents that the message refers to. Should an interested and authorized user hear about the message however, he need only open an SSH connection to the user in the message, and request to pull down the commit hash.</p>\n<h2>Configuration</h2>\n<p>Each repository should be configured using a version controlled file. The recommended name for this file is <code>.gap.ini</code>. The file must, at minimum, describe the path to the repository, and it’s official owner.</p>\n<pre><code class=\"language-.gap.ini\">[guldfs]\npath = /isysd/pictures/family/\nowner = isysd\n</code></pre>\n<p>This lets other users know the governance for the repository, and it’s address. This address can be used in local file structures (i.e. mounted at /home/isysd/pictures/family) but that is not required. It is, however, required to name the repository after this path in kebab case (i.e. isysd-pictures-family), and to use the path in all related network messages.</p>\n<h3><strong><em>Additional Configuration</em></strong></h3>\n<p>For additional security, and/or for large file support, it is recommended to use pre and post commit hooks to transform the commit contents. For example, the pre-commit hook might do something like encrypt the files using another user’s PGP key, create a torrent out of the encrypted files, and then commit the torrent to git, ignoring both the plaintext and encrypted files. The reader would have a post-commit hook that would do the reverse, opening the torrent, downloading the encrypted files, then decrypting them to finally access the plaintext file.</p>\n<p><img src=\"/img/AdditionalConfiguration_guldfs.jpg\" alt=\"additionalconfigguldfs\"></p>\n<p>Because git hooks are arbitrarily programmable, it is not necessary to describe every possible use case. The important thing is that each repository declare pre and post commit hooks in .gap.json, so that all members of that repository follow the same rules.</p>\n<pre><code class=\"language-.gap.ini\">[guldfs]\npath = /isysd/pictures/family/\nowner = isysd\npre-commit = path/to/pre-commit.sh\npost-commit = path/to/post-commit.sh\n</code></pre>\n<h3><strong><em>Mirror Local Filesystem Permissions</em></strong></h3>\n<p>Unix-based filesystems have a common permission scheme, broken into three categories: user, group, others. Each of these can have some combination of read ®, write (w), and execute (x) permissions. These same file permissions exist in guldFS, but are enforced through cryptography. This allows the files to be distributed on a network without compromising the access to any file or directory.</p>\n<p>The enforcement of various combinations and file sizes requires a combination of pre and post commit hooks as described in the Additional Configuration section.</p>\n<p><strong>Hook Format Map</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Format</th>\n<th style=\"text-align:center\">Min Users</th>\n<th style=\"text-align:center\">Max Users</th>\n<th style=\"text-align:center\">Torrent at Size</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Plain text</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">N/A</td>\n<td style=\"text-align:center\">10 MB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GPG Encrypt</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">10 MB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AES Encrypt</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">N/A</td>\n<td style=\"text-align:center\">10 MB</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Torrent</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">N/A</td>\n<td style=\"text-align:center\">N/A</td>\n</tr>\n</tbody>\n</table>\n<p>Depending on how many users are in the group, and how large the file is, one or more hook rules may be in effect. For example, a large, private file for a group of 1 would be GPG encrypted. If a second user was to be added to the group with access to that large file, GPG would still be used, but the GPG encrypted version of the file would then also be torrented.</p>\n<p>The guldFS fuse middleware should automatically determine which rules to apply in most cases, based on the table above. In the case where a user wishes to explicitly set additional rules for a directory, this can be done by editing the .gitignore file with markup properties. The syntax to turn on a rule for following lines is: <code>#guld:&lt;rule1&gt;[:&lt;rule2…]</code>. For example, to turn on the GPG rule for all following files, add the line <code>#guld:gpg</code>. To also include torrenting, use <code>#guld:gpg:torrent</code>.</p>\n<p><strong><em>File Permission Examples</em></strong></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>User</th>\n<th>Group</th>\n<th>World</th>\n<th>Properties</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/home/&lt;user&gt;/</td>\n<td>6 (+rw)</td>\n<td>4 (+r)</td>\n<td>4 (+r)</td>\n<td>write-check</td>\n</tr>\n<tr>\n<td>/home/&lt;user&gt;/tech</td>\n<td>7 (+rwx)</td>\n<td>5 (+rx)</td>\n<td>5 +®</td>\n<td>write-check</td>\n</tr>\n<tr>\n<td>/home/&lt;user&gt;/.password-store</td>\n<td>6 (+rw)</td>\n<td>4 (+r)</td>\n<td>0</td>\n<td>GPG, write-check</td>\n</tr>\n<tr>\n<td>/home/&lt;user&gt;/Pictures</td>\n<td>6 (+rw)</td>\n<td>4 (+r)</td>\n<td>0</td>\n<td>AES/GPG, write-check</td>\n</tr>\n<tr>\n<td>/home/&lt;user&gt;/Videos</td>\n<td>6 (+rw)</td>\n<td>4 (+r)</td>\n<td>0</td>\n<td>AES/GPG, Torrent, write-check</td>\n</tr>\n</tbody>\n</table>\n<p>In most of these real world examples, only the user has write permission, which needs to be checked. This is as simple as a post-pull hook gpg signature count. If the gpg signature doesn’t match the owner’s, delete the commit. Additionally, either the AES or GPG rule is applied depending on how large the group is, which is contextual. Finally, we make assumptions, like that Pictures are going to be small enough to not require torrenting, but that Videos will almost certainly require it.</p>\n",
      "id": 53
    },
    {
      "path": "papers/guldOS_Specification.md",
      "url": "papers/guldOS_Specification.html",
      "content": "# guld Operating System (guldOS) Specification\n\n**Author:** \n\nIra Miller <public@iramiller.com>\n\nLicense: CC-BY-4\n\nDRAFT\n\nv0.0.1\n\n## Overview\n\nThe guld Operating System (guldOS) is a security and privacy focused variant of [Gentoo](http://gentoo.org/) Linux. guld uses Gentoo’s package manager (portage) to compile everything from source. The goal of guldOS is to compile a minimum build for each user to do secure signing operations in an environment they can trust.\n\n## Disk Encryption\n\nThe most distinct functionality of guldOS is around disk encryption. The recommended lowest level filesystem configuration for guldOS is dm-crypt LUKS with a PGP encrypted, detached [keyfile](https://wiki.gentoo.org/wiki/Dm-crypt_full_disk_encryption).\n\nThe keyfile and/or PGP key must be on a second device, preferably a dedicated smart card with [openPGP](http://openpgp.org/) support. In the simplest implementation, this can be a separate partition or a USB drive.\n\n![guldOSDiskEncrypt](/img/guldOS_DiscEncryption.jpg)\n\n[Yubikey](http://yubico.com/) is probably the most popular example of an openPGP smart card, but [Ledger Wallet](https://www.ledgerwallet.com/) also supports cryptocurrency key management, which many guldOS users will find helpful.\n\nRegardless of what openPGP device is used to unlock the PGP key, the key should then be used to decrypt the LUKS keyfile. The LUKS keyfile is then used to decrypt the partition, which can then be mounted for the user.\n\nSingle Password Environment\nStandardization around PGP allows users to fully encrypt their disk using the same key and password that they use at higher levels, such as guldFS, as well as with applications like password manager [`pass`](https://www.passwordstore.org/) and with email. This creates an easily managed single password security system for all of the various layers of encryption a user might interact with.\n\n![guldOSsinglePWenviro](/img/guldOS_SinglePwEnviroment.jpg)\n\nMaintaining this Single Password Environment drives many of the design and application choices throughout guldOS. While it does create a single point of failure, it is the most familiar and practical to expect end users to be able to follow. Furthermore, PGP is so widely supported that the ecosystem of hardware and software options for `openPGP Device` is without equal.\n\n## Portage Overlay\n\nAfter the crypto layers are configured, guldOS can be treated like any other portage [overlay](https://overlays.gentoo.org/). The specific choices of applications are to always use source distributions and GPG if possible. Specific applications which are to be emerged are:\n * git\n * GnuPG\n * ledger-cli\n * pass\n * xfce4\n * Offlineimap\n * Evolution\n * guldFS\n * Bitcoin (fork luke-jr build to create plain core)\n * Ethereum\n * Dash (package needed)\n\nThe full list is an order of magnitude longer when including libraries and such (i.e. Berkeley DB 4.8), but these are the most important packages. Some P2P network graphics and guld branding rounds out the user experience\n\n![TigoCTMSS](/img/TigoCTM_prototypeSS.jpg)\n\n",
      "html": "<h1>guld Operating System (guldOS) Specification</h1>\n<p><strong>Author:</strong></p>\n<p>Ira Miller <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n<p>License: CC-BY-4</p>\n<p>DRAFT</p>\n<p>v0.0.1</p>\n<h2>Overview</h2>\n<p>The guld Operating System (guldOS) is a security and privacy focused variant of <a href=\"http://gentoo.org/\">Gentoo</a> Linux. guld uses Gentoo’s package manager (portage) to compile everything from source. The goal of guldOS is to compile a minimum build for each user to do secure signing operations in an environment they can trust.</p>\n<h2>Disk Encryption</h2>\n<p>The most distinct functionality of guldOS is around disk encryption. The recommended lowest level filesystem configuration for guldOS is dm-crypt LUKS with a PGP encrypted, detached <a href=\"https://wiki.gentoo.org/wiki/Dm-crypt_full_disk_encryption\">keyfile</a>.</p>\n<p>The keyfile and/or PGP key must be on a second device, preferably a dedicated smart card with <a href=\"http://openpgp.org/\">openPGP</a> support. In the simplest implementation, this can be a separate partition or a USB drive.</p>\n<p><img src=\"/img/guldOS_DiscEncryption.jpg\" alt=\"guldOSDiskEncrypt\"></p>\n<p><a href=\"http://yubico.com/\">Yubikey</a> is probably the most popular example of an openPGP smart card, but <a href=\"https://www.ledgerwallet.com/\">Ledger Wallet</a> also supports cryptocurrency key management, which many guldOS users will find helpful.</p>\n<p>Regardless of what openPGP device is used to unlock the PGP key, the key should then be used to decrypt the LUKS keyfile. The LUKS keyfile is then used to decrypt the partition, which can then be mounted for the user.</p>\n<p>Single Password Environment\nStandardization around PGP allows users to fully encrypt their disk using the same key and password that they use at higher levels, such as guldFS, as well as with applications like password manager <a href=\"https://www.passwordstore.org/\"><code>pass</code></a> and with email. This creates an easily managed single password security system for all of the various layers of encryption a user might interact with.</p>\n<p><img src=\"/img/guldOS_SinglePwEnviroment.jpg\" alt=\"guldOSsinglePWenviro\"></p>\n<p>Maintaining this Single Password Environment drives many of the design and application choices throughout guldOS. While it does create a single point of failure, it is the most familiar and practical to expect end users to be able to follow. Furthermore, PGP is so widely supported that the ecosystem of hardware and software options for <code>openPGP Device</code> is without equal.</p>\n<h2>Portage Overlay</h2>\n<p>After the crypto layers are configured, guldOS can be treated like any other portage <a href=\"https://overlays.gentoo.org/\">overlay</a>. The specific choices of applications are to always use source distributions and GPG if possible. Specific applications which are to be emerged are:</p>\n<ul>\n<li>git</li>\n<li>GnuPG</li>\n<li>ledger-cli</li>\n<li>pass</li>\n<li>xfce4</li>\n<li>Offlineimap</li>\n<li>Evolution</li>\n<li>guldFS</li>\n<li>Bitcoin (fork luke-jr build to create plain core)</li>\n<li>Ethereum</li>\n<li>Dash (package needed)</li>\n</ul>\n<p>The full list is an order of magnitude longer when including libraries and such (i.e. Berkeley DB 4.8), but these are the most important packages. Some P2P network graphics and guld branding rounds out the user experience</p>\n<p><img src=\"/img/TigoCTM_prototypeSS.jpg\" alt=\"TigoCTMSS\"></p>\n",
      "id": 54
    },
    {
      "path": "papers/guld_email.md",
      "url": "papers/guld_email.html",
      "content": "# guld email\n\n__Authors:__\n\nIra Miller <public@iramiller.com>\n\nCindy Zimmerman <cindy@tigoctm.com>\n\nLicense: CC-BY-4\n\nDRAFT\n\nv0.0.1\n\n## Overview\n\nGuld mail is a service which integrates PGP signed emails with the guld filesystem. This allow backup and alternative delivery mechanisms to traditional email. More importantly, it allows a light, email-based interface for guld. Using guld mail, users can make transactions, sign documents, and control any of their files.\n\n## Nodes\n\nFull guld nodes will synchronize emails to the blocktree and check for any events or commands in each message.\n\n## _Maildir_\n\n*Maildir is the chosen format for guld mail, because it stores emails individually in a flexible directory structure. The small files are more efficient for version control. Individual files and flexible directories are both useful for access control.*\n\nOfflineIMAP\n\n## _Mustache_\n\nMustache is the chosen template language for guld mail, because it is supported by every language guld is likely to be ported to.\n\n##### TO-DO\n\nfile name metadata\n\nSigning instructions\n\n",
      "html": "<h1>guld email</h1>\n<p><strong>Authors:</strong></p>\n<p>Ira Miller <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n<p>Cindy Zimmerman <a href=\"mailto:cindy@tigoctm.com\">cindy@tigoctm.com</a></p>\n<p>License: CC-BY-4</p>\n<p>DRAFT</p>\n<p>v0.0.1</p>\n<h2>Overview</h2>\n<p>Guld mail is a service which integrates PGP signed emails with the guld filesystem. This allow backup and alternative delivery mechanisms to traditional email. More importantly, it allows a light, email-based interface for guld. Using guld mail, users can make transactions, sign documents, and control any of their files.</p>\n<h2>Nodes</h2>\n<p>Full guld nodes will synchronize emails to the blocktree and check for any events or commands in each message.</p>\n<h2><em>Maildir</em></h2>\n<p><em>Maildir is the chosen format for guld mail, because it stores emails individually in a flexible directory structure. The small files are more efficient for version control. Individual files and flexible directories are both useful for access control.</em></p>\n<p>OfflineIMAP</p>\n<h2><em>Mustache</em></h2>\n<p>Mustache is the chosen template language for guld mail, because it is supported by every language guld is likely to be ported to.</p>\n<h5>TO-DO</h5>\n<p>file name metadata</p>\n<p>Signing instructions</p>\n",
      "id": 55
    },
    {
      "path": "papers/guld_ledger.md",
      "url": "papers/guld_ledger.html",
      "content": "# guld ledger\n\n__Authors:__\n\nIra Miller <public@iramiller.com>\n\nCindy Zimmerman <cindy@tigoctm.com>\n\nLicense: CC-BY-4\n\nDRAFT\n\nv0.0.1\n\n## Overview\n\nGuld uses ledger-cli as the official ledger format and processing engine. This document describes the specific format which is used in the parent guld group’s ledger, and is not meant to preclude alternate structures in child groups.\n\n## Accounting Principles\n\nAccount 1 is always a top level guld name. \n\nAccount 2 is one of the standard accounting categories: Assets, Liabilities, Income, Expenses, Equity.\n\nAccounts 3 and onward are for subdividing the categories.\n\nAssets are only spendable with the signature(s) of the key(s) belonging to the account 1 identity. Equity is never transferrable, but gives weight to votes by the account 1 identity in the name of an account 3 identity.\n\n## Transactions\n\n### Grant\n\n; requires majority of guld equity to approve\n\n2017/12/01 * Grant for work done\n    guld:Liabilities   -x guld\n    guld:Equity:Receiver   x guld\n    Receiver:Assets   x guld\n    Receiver:Income   -x guld\n   \n### Registration\n\n; requires only sufficient guld and an open name\n2017/12/01 * individual registration\n    Username:Assets   -1 guld\n    Username:Expenses:guld:register   1 guld\n    guld:Liabilities   1 guld\n    guld:Income:register:individual:Username   -1 guld\n\n; m = number of members\n\n2017/12/01 * group registration\n\n    Username:Assets   -m guld\n    \n    Username:Expenses:guld:register   m guld\n    \n    guld:Liabilities   m guld\n    \n    guld:Income:register:group:groupname   -m guld\n\n2017/12/01 * device registration\n    Username:Assets   -0.1 guld\n    Username:Expenses:guld:register   0.1 guld\n    guld:Liabilities   0.1 guld\n    guld:Income:register:device:Username:devicename   -0.1 guld\n    \n### Transfer\n\n; requires signature of the debtor\n\n2017/12/01 * transfer\n    Sender:Assets   -x guld\n    Sender:Expenses   x guld\n    Receiver:Assets   x guld\n    Receiver:Income   -x guld\n\nTODO file names and locations\n",
      "html": "<h1>guld ledger</h1>\n<p><strong>Authors:</strong></p>\n<p>Ira Miller <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n<p>Cindy Zimmerman <a href=\"mailto:cindy@tigoctm.com\">cindy@tigoctm.com</a></p>\n<p>License: CC-BY-4</p>\n<p>DRAFT</p>\n<p>v0.0.1</p>\n<h2>Overview</h2>\n<p>Guld uses ledger-cli as the official ledger format and processing engine. This document describes the specific format which is used in the parent guld group’s ledger, and is not meant to preclude alternate structures in child groups.</p>\n<h2>Accounting Principles</h2>\n<p>Account 1 is always a top level guld name.</p>\n<p>Account 2 is one of the standard accounting categories: Assets, Liabilities, Income, Expenses, Equity.</p>\n<p>Accounts 3 and onward are for subdividing the categories.</p>\n<p>Assets are only spendable with the signature(s) of the key(s) belonging to the account 1 identity. Equity is never transferrable, but gives weight to votes by the account 1 identity in the name of an account 3 identity.</p>\n<h2>Transactions</h2>\n<h3>Grant</h3>\n<p>; requires majority of guld equity to approve</p>\n<p>2017/12/01 * Grant for work done\nguld:Liabilities   -x guld\nguld:Equity:Receiver   x guld\nReceiver:Assets   x guld\nReceiver:Income   -x guld</p>\n<h3>Registration</h3>\n<p>; requires only sufficient guld and an open name\n2017/12/01 * individual registration\nUsername:Assets   -1 guld\nUsername:Expenses:guld:register   1 guld\nguld:Liabilities   1 guld\nguld:Income:register:individual:Username   -1 guld</p>\n<p>; m = number of members</p>\n<p>2017/12/01 * group registration</p>\n<pre><code>Username:Assets   -m guld\n\nUsername:Expenses:guld:register   m guld\n\nguld:Liabilities   m guld\n\nguld:Income:register:group:groupname   -m guld\n</code></pre>\n<p>2017/12/01 * device registration\nUsername:Assets   -0.1 guld\nUsername:Expenses:guld:register   0.1 guld\nguld:Liabilities   0.1 guld\nguld:Income:register:device:Username:devicename   -0.1 guld</p>\n<h3>Transfer</h3>\n<p>; requires signature of the debtor</p>\n<p>2017/12/01 * transfer\nSender:Assets   -x guld\nSender:Expenses   x guld\nReceiver:Assets   x guld\nReceiver:Income   -x guld</p>\n<p>TODO file names and locations</p>\n",
      "id": 56
    },
    {
      "path": "papers/guld_name_service.md",
      "url": "papers/guld_name_service.html",
      "content": "# guld Name Service (gns)\n\n__Authors:__\n\nIra Miller <public@iramiller.com>\n\nCindy Zimmerman <cindy@tigoctm.com>\n\nLicense: CC-BY-4.0\n\nDRAFT\n\nv0.0.1\n\n\n## Overview\n\nThe guld name service aka gns is a decentralized replacement for the legacy Dynamic Name Service (DNS) infrastructure. Peers of the guld network will keep their own and each other’s MAC and IP address history for p2p routing of standard TCP and UDP traffic. guld name service also introduces a new naming and domain routing scheme, with usernames as personal, top level domains.\n\n\n## Names\n\nEach user and group is required to register a unique, alphanumeric name, which is treated like a top level domain. I.e. if my name is `isysd`, then peers could address me with urls ending in `.isysd`\n\nIndividual devices are registered under a top level user, with a set of child keys. Devices have names unique for their owner. For example, user `isysd` might have devices `phone` and `laptop` with individual addresses `phone.isysd` and `laptop.isysd`\n\n### **_Structure of a guld URI_**\n\n`<device name>.<user or group name>/<blocktree path>`\n\n### **_Name ownership_**\n\nAll names are issued and governed by the `guld` group. A name is considered registered when greater than 50% of the guld equity recognize it.\n\nEach name must list one or more RSA 2048+ bit pgp keys for signing, and register or be authorized by at minimum one full node. The signing arrangement determines which type of name can be registered.\n\n|Category|Keys|Registration Cost|\n|------|------|------|\n|device|user or group as parent|0.1 guld|\n|user|one parent key|1 guld|\n|group|1-10 user(s) as parents|1 guld / member|\n|medium group|11-100 users as parents|100 guld|\n|large group|101-1,000 users as parents|1,000 guld|\n|enterprise group|1,001+ users as parents|10,000 guld|\n\n## Name Resolution\n\nEach user and group is responsible for maintaining an up to date, signed record of their devices, including MAC and IP address history. Additionally, each group must maintain a complete record of all active members.\n\nOptionally, users may maintain each other's records for direct routing.\n\nAs a last resort, the guld group should be the parent to all other public areas of the network.\n\nTherefore, each request can be routed using the following priorities.\n\n`local -> friends -> groups -> guld group`\n\n### **_Blocktree Path Resolution_**\n\nOnce the device has been resolved, a path resolution process begins. This is the same as http, where a FQDN determines a server, then the path determines which files to load off of said server. For example, say you reach http://google.com, a fully qualified domain name (FQDN). You now need to tell the google.com server(s) which record of theirs you would like, i.e. google.com/images for google images. The part after the top level domain (.com) is the path.\n\nIn the guld network, paths are strictly ordered according to the blocktree taxonomy. That is, each host serves paths relative to `/home/<owner name>`. For example, each member is required to have a directory `/devices`. Assuming the user's name is `isysd`, that directory would be locally mounted at `/home/isysd/devices`. If being addressed on the network, the directory could be loaded alternately by `isysd/devices` or `<device name>.isysd/devices`\n\nThe top tier of directories is referred to as `b1`, and is also governed by the guld group. guld reserves the right to assign new `b1` names, which may become required branches for some or all guld members. Tentatively, a suggested requirement of 25,000 guld and 66% guld equity approval would be required to register a new `b1` name.\n\n|Blocktree level|Registration Cost|\n|---------------|-----------------|\n|'b1'        |       25,000 guld  |\n|'b2'           |   licensed with `b1`|\n\nAfter `b1`, paths are governed by the `b1` owner. For example, the guld group owns `b1` record `devices`, and requires the following subdirectory structure: `/devices/<device name>/etc/hosts`. In this case, the device's active `hosts` file is the expected response.\n\n### **_Format_**\n\nThe gns routing tables must be formatted as `hosts` files, typically found at `/etc/hosts`. Individual device `hosts` files are concatenated regularly by a local service, creating a local name cache. This cache of friends is the preferred node list for any network queries, including for routing info.\n\nGroups link `hosts` files for all members, including said members' network addresses. Therefore, groups can be treated as a routing table for members.\n\nIndividual `hosts` file entries consist of an IP address, whitespace, and then a domain name. For example, most devices will include a localhost domain for routing locally.\n\n### **_Example hosts line_**\n\n`127.0.0.1\tlocalhost`\n\n## Feasibility\n### **_User Experience_**\n\nBecause `hosts` files are (configurably) used before remote dns resolution, this method provides a seamless UX. Users and programs make dns requests like usual, and the local operating system knows to prioritize local `hosts`records.\n\n### **_Servers_**\n\nWhile `gns` is designed as a p2p network, its feasible users will want services to complement light devices such as phones. These devices are not capable of maintaining a full node, and therefore, must be associated with one.\n\nSuch node hosting services are allowed on the network and may charge whatever fees users agree to, so long as their nodes meet the technical requirements.\n\n",
      "html": "<h1>guld Name Service (gns)</h1>\n<p><strong>Authors:</strong></p>\n<p>Ira Miller <a href=\"mailto:public@iramiller.com\">public@iramiller.com</a></p>\n<p>Cindy Zimmerman <a href=\"mailto:cindy@tigoctm.com\">cindy@tigoctm.com</a></p>\n<p>License: CC-BY-4.0</p>\n<p>DRAFT</p>\n<p>v0.0.1</p>\n<h2>Overview</h2>\n<p>The guld name service aka gns is a decentralized replacement for the legacy Dynamic Name Service (DNS) infrastructure. Peers of the guld network will keep their own and each other’s MAC and IP address history for p2p routing of standard TCP and UDP traffic. guld name service also introduces a new naming and domain routing scheme, with usernames as personal, top level domains.</p>\n<h2>Names</h2>\n<p>Each user and group is required to register a unique, alphanumeric name, which is treated like a top level domain. I.e. if my name is <code>isysd</code>, then peers could address me with urls ending in <code>.isysd</code></p>\n<p>Individual devices are registered under a top level user, with a set of child keys. Devices have names unique for their owner. For example, user <code>isysd</code> might have devices <code>phone</code> and <code>laptop</code> with individual addresses <code>phone.isysd</code> and <code>laptop.isysd</code></p>\n<h3><strong><em>Structure of a guld URI</em></strong></h3>\n<p><code>&lt;device name&gt;.&lt;user or group name&gt;/&lt;blocktree path&gt;</code></p>\n<h3><strong><em>Name ownership</em></strong></h3>\n<p>All names are issued and governed by the <code>guld</code> group. A name is considered registered when greater than 50% of the guld equity recognize it.</p>\n<p>Each name must list one or more RSA 2048+ bit pgp keys for signing, and register or be authorized by at minimum one full node. The signing arrangement determines which type of name can be registered.</p>\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>Keys</th>\n<th>Registration Cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>device</td>\n<td>user or group as parent</td>\n<td>0.1 guld</td>\n</tr>\n<tr>\n<td>user</td>\n<td>one parent key</td>\n<td>1 guld</td>\n</tr>\n<tr>\n<td>group</td>\n<td>1-10 user(s) as parents</td>\n<td>1 guld / member</td>\n</tr>\n<tr>\n<td>medium group</td>\n<td>11-100 users as parents</td>\n<td>100 guld</td>\n</tr>\n<tr>\n<td>large group</td>\n<td>101-1,000 users as parents</td>\n<td>1,000 guld</td>\n</tr>\n<tr>\n<td>enterprise group</td>\n<td>1,001+ users as parents</td>\n<td>10,000 guld</td>\n</tr>\n</tbody>\n</table>\n<h2>Name Resolution</h2>\n<p>Each user and group is responsible for maintaining an up to date, signed record of their devices, including MAC and IP address history. Additionally, each group must maintain a complete record of all active members.</p>\n<p>Optionally, users may maintain each other’s records for direct routing.</p>\n<p>As a last resort, the guld group should be the parent to all other public areas of the network.</p>\n<p>Therefore, each request can be routed using the following priorities.</p>\n<p><code>local -&gt; friends -&gt; groups -&gt; guld group</code></p>\n<h3><strong><em>Blocktree Path Resolution</em></strong></h3>\n<p>Once the device has been resolved, a path resolution process begins. This is the same as http, where a FQDN determines a server, then the path determines which files to load off of said server. For example, say you reach <a href=\"http://google.com\">http://google.com</a>, a fully qualified domain name (FQDN). You now need to tell the <a href=\"http://google.com\">google.com</a> server(s) which record of theirs you would like, i.e. <a href=\"http://google.com/images\">google.com/images</a> for google images. The part after the top level domain (.com) is the path.</p>\n<p>In the guld network, paths are strictly ordered according to the blocktree taxonomy. That is, each host serves paths relative to <code>/home/&lt;owner name&gt;</code>. For example, each member is required to have a directory <code>/devices</code>. Assuming the user’s name is <code>isysd</code>, that directory would be locally mounted at <code>/home/isysd/devices</code>. If being addressed on the network, the directory could be loaded alternately by <code>isysd/devices</code> or <code>&lt;device name&gt;.isysd/devices</code></p>\n<p>The top tier of directories is referred to as <code>b1</code>, and is also governed by the guld group. guld reserves the right to assign new <code>b1</code> names, which may become required branches for some or all guld members. Tentatively, a suggested requirement of 25,000 guld and 66% guld equity approval would be required to register a new <code>b1</code> name.</p>\n<table>\n<thead>\n<tr>\n<th>Blocktree level</th>\n<th>Registration Cost</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>‘b1’</td>\n<td>25,000 guld</td>\n</tr>\n<tr>\n<td>‘b2’</td>\n<td>licensed with <code>b1</code></td>\n</tr>\n</tbody>\n</table>\n<p>After <code>b1</code>, paths are governed by the <code>b1</code> owner. For example, the guld group owns <code>b1</code> record <code>devices</code>, and requires the following subdirectory structure: <code>/devices/&lt;device name&gt;/etc/hosts</code>. In this case, the device’s active <code>hosts</code> file is the expected response.</p>\n<h3><strong><em>Format</em></strong></h3>\n<p>The gns routing tables must be formatted as <code>hosts</code> files, typically found at <code>/etc/hosts</code>. Individual device <code>hosts</code> files are concatenated regularly by a local service, creating a local name cache. This cache of friends is the preferred node list for any network queries, including for routing info.</p>\n<p>Groups link <code>hosts</code> files for all members, including said members’ network addresses. Therefore, groups can be treated as a routing table for members.</p>\n<p>Individual <code>hosts</code> file entries consist of an IP address, whitespace, and then a domain name. For example, most devices will include a localhost domain for routing locally.</p>\n<h3><strong><em>Example hosts line</em></strong></h3>\n<p><code>127.0.0.1\tlocalhost</code></p>\n<h2>Feasibility</h2>\n<h3><strong><em>User Experience</em></strong></h3>\n<p>Because <code>hosts</code> files are (configurably) used before remote dns resolution, this method provides a seamless UX. Users and programs make dns requests like usual, and the local operating system knows to prioritize local <code>hosts</code>records.</p>\n<h3><strong><em>Servers</em></strong></h3>\n<p>While <code>gns</code> is designed as a p2p network, its feasible users will want services to complement light devices such as phones. These devices are not capable of maintaining a full node, and therefore, must be associated with one.</p>\n<p>Such node hosting services are allowed on the network and may charge whatever fees users agree to, so long as their nodes meet the technical requirements.</p>\n",
      "id": 57
    }
  ]
}